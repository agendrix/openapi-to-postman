---
openapi: 3.0.0
info:
  title: Agendrix JSON API V1
  description: |2-

    This page contains a detailed description of Agendrix's public API. Below, you will find a Get Started section resuming the main
    steps leading you to your first API call, as well as an OAuth 2.0 section, describing the authentication process necessary in order to
    retrieve a mandatory access token. Each endpoints are then described, grouped by their database model - autorizations, parameters,
    responses, everything you need is there. Enjoy!

    # Getting Started
    This guide describes how to make your first API call to Agendrix's Public API.

    ## Create an Application
    Creating an application will generate your development keys, for a sandbox environment where you can do any test you want, and a production environment. You can
    use the application for yourself or your clients.

    - From the [Applications](./applications) section, click on the New Application button, and choose a name for your new application.
    - You have now been redirected to your app general informations. You can add a description, an icon and edit your application name as well. You can also see the
      approval status of your application. Your application needs to be approved before it can be used in production.
    - You can retrieve your development and production credentials in their respective section. You can regenerate a secret, manage your redirect URIs and your scopes.

    Your Client ID and Client Secret are mandatory in order to retrieve your OAuth 2.0 tokens. Redirect URIs are as well - at least one.

    ## Sandbox
    The sandbox environment is used for testing. You can use it as long as you are in development. When using the sandbox, you do
    not have to activate the API product for your own Agendrix application.

    <br/>To sign in to the sandbox environment, follow these steps:

      - From the [Applications](./applications) section, click on your application.
      - Go to the Sandbox tab.
      - Click the Sign in to the sandbox link.

    If you wish to use your own Agendrix application directly, follow these steps:

      - Log in to your Agendrix application.
      - Go to the Billing tab.
      - Scroll down to the Add-Ons section, then click the Chat with sales button under the API tile.

    ## Retrieve an OAuth 2.0 access token
    You need an access token to access Agendrix API. The simplier way to do so is through the OAuth 2.0 [Playground](./playground). There is also a detailed
    explanation of the process in the OAuth 2.0 section below.

    ## Make an API call
    Now that you have an access token, you can use this token to make any call you like by adding the Authorization header to the request, as long has your
    credentials include the required scopes for a speficic endpoint.

    # Resources
    This section regroups the different downloadable Agendrix's API resources.

    ## OAS 3
    An Open API Specification document is a detailed, precise description of an API, from it's security schemes to his endpoints. It has a lot of uses - our own
    [document](./open-api-spec) generates a large part of this documentation, as well as the Postman collection. The Open API ecosystem is rich and mature and is
    used widely by the community. For more on OAS, click <a href='https://github.com/OAI/OpenAPI-Specification' target='_blank'>here</a>.

    ## Postman Collection
    Postman is collaborative platform for API development. By importing Agendrix's preconfigured [collection](./postman-collection), you can easily test and experiment
    with Agendrix's API. Download the collection, import it into Postman, set your access token - from the collection, view more actions, edit, authorizations - and enjoy!
    For more on Postman, click <a href='https://www.postman.com/' target='_blank'>here</a>.

    ## Examples
    We also implemented basic <a href='https://github.com/agendrix/public-api-integration-examples' target='_blank'>examples</a> of integration with our API in javascript and ruby.
    Those examples include the complete oauth flow as well as tokens handling and of course, making requests to the API.

    # OAuth 2.0
    Agendrix uses OAuth 2.0 protocol for authorization. Once you created an application, it can be used to request access and refresh tokens. The access token is
    valid for a period of 2 hours and needs to be refresh afterward using the refresh token. The access token can then be used to make API calls. For an interactive
    demonstration of the process, use the OAuth 2.0 Playground.

    ## Prepare the Authorization Request
    The first step is to prepare the authorization request using the Client ID and one of the redirect URIs defined for the application - or the client. Scopes
    default to read when not specified.
    ```
    https://app.agendrix.com/oauth/authorize?client_id={CLIENT_ID}&redirect_uri={REDIRECT_URI}&response_type=code&scope=read+write
    ```

    ## Redirect the User
    Once the user is redirected to the authorization request, he needs to gives his approval sharing his data with the application, and choose the organization
    for which he wants to do so. The authorization request is then processed by the OAuth 2.0 server.

    ## Handle the OAuth 2.0 Server Response
    If the authorization request is valid, the OAuth 2.0 server sends an authorization code to the redirect URI speficied in the authorization request. This
    code can be used to prepare the request to retrieve the access and refresh tokens.

    ## Exchange the Authorization Code for Tokens
    The final step is simply to exchange the authorization code received against the tokens. The Client ID, the Client Secret, the redirect URI and the grant
    type - which is always authorization_code - need to be included in the request. The OAuth 2.0 server then sends the access and refresh token to the redirect
    URI defined.
    ```
    curl --request POST 'https://app.agendrix.com/oauth/token' \
    --header 'Content-Type: application/json' \
    --data-raw '{
      "client_id": "{CLIENT_ID}",
      "client_secret": "{CLIENT_SECRET}",
      "redirect_uri": "{REDIRECT_URI}",
      "grant_type": "authorization_code",
      "code": "{AUTORIZATION_CODE}"
    }'
    ```

    ## Exchange the Refresh Token for a New Access Token
    The retrieved access token will eventually expire - it has a TTL of 2 hours. Instead of going throught all the authorizing process again, the refresh token
    can be used to request new access and refresh tokens. The grant type becomes refresh_token and the refresh token must be included in the request, along with
    the Client ID, Client Secret and redirect URI. A subset of the original access token scopes can also be included in the request.
    ```
    curl --request POST 'https://app.agendrix.com/oauth/token' \
    --header 'Content-Type: application/json' \
    --data-raw '{
      "client_id": "{CLIENT_ID}",
      "client_secret": "{CLIENT_SECRET}",
      "redirect_uri": "{REDIRECT_URI}",
      "grant_type": "refresh_token",
      "refresh_token": "{REFRESH_TOKEN}",
    }'
    ```

    # Authentication
    <SecurityDefinitions />

    # Headers
    Specific headers must be set in order to interact with the API. Some headers in the API's reponses also contain relevant information.

    ## Requests
    All requests made to the Agendrix's Public API must have two specific headers set. The first one is the the Content-Type header. It must always be set to
    application/json, since it is the supported format by the API. The second one is the Authorization header, in which you must add your access token as a
    bearer. You can see an example of a classic curl request in the [Make an API Call](./documentation#section/Make-an-API-Call) section.

    ## Responses
    All responses from the API are in JSON; therefore, they all have the Content-Type header set to application/json. In the specific case the number of
    requests to the API is over the rate [limit](./documentation#section/Rate-Limiting), the headers RateLimit-Limit, RateLimit-Remaining and RateLimit-Reset
    are added to the response headers. They respectively represent the rate limit of requests allowed, the remaining number of requests allowed - which is
    always 0 in that case - and the amount of seconds before the rate limit resets.

    # Rate Limiting
    The API's rate limiting is currently set to 180 requests per minute. As long as the rate limiting is respected and the request is valid as well as the
    access token, it is processed by API.

    # Bulk Actions

    ## Bulk size limit
    The bulk size limit is currently set to a 1000 per request. Just as the rate limiting, as long as the size limit is respected, and the request and the access token
    are valid, it is processed by the API.

    # Make an API Call
    Once you have the access token, making a call to Agendrix's Public API is rather straightforward. It is a classic HTTP request. All you have to do is add the
    required headers as well as the body or the query params - depending of the type of request -, as you can see in the example below.
    ```
    curl --request POST 'https://api.agendrix.com/v1/positions' \
    --header 'Content-Type: application/json' \
    --header 'Authorization: Bearer {ACCESS_TOKEN}' \
    --data-raw '{
        "name": "A position name"
    }'
    ```

    # Responses
    All responses are in JSON. Responses structure vary slightly depending of the context.

    ## Paginated Responses
    Paginated responses always contain the data and pagination fields. The data field represents the requested data returned by the API - for paginated responses,
    it is an array of objects. The pagination field represents the response pagination metadata. The pagination field contains the sort value, the search values, the
    page size, the limit on the page size, the current, next, previous, last, first and total pages, the total count of records and finally if the requested page is out
    of range.

    ## Other Responses
    All other responses always contain the data and errors fields. The data field represents once again the data returned by the API - but directly as an object
    this time - and will be null if there are errors. The errors field is an array of objects describing the error with a source, short message and/or long message
    fields. The errors field is null if the resquest processed without errors.

    # Errors

    ## Unauthorized Error - Code 401
    Different kind of unauthorized errors can happen while using the API:
    - Invalid token
    - Expired token
    - Revoked token
    - Unknown token
    - Unapproved application
    - Unauthorized operation (Your agendrix user does not have the rights to perform the action)

    ## Forbidden Error - Code 403
    When the token does not possess the required scope to perform the action

    ## Rate Limiting Error - Code 429
    When the rate limit of 180 requests per minute is not respected, a rate limit error is returned. The *RateLimit-Reset* header specifies how much time is left before
    another request can be made.

    ## Internal Server Error - Code 500
    When an unexpected error occurs on the server, the API will return an internal server error.

    ## Not Found Error - Code 404
    It can happen for every endpoints that need to retrieve an existing record - GET and PUT requests -, excepted for a bulk update.

    ## Query Param Error - Code 400
    Different kind of query param errors can be triggered by the API:
    - If a required param is missing
    - If a param has the wrong format (i.e. dates)
    - If a param has the wrong value (i.e. sort or search values)

    It can happen only for paginated endpoints - GET requests.

    ## Input Params Error - Code 400
    If a payload does not respect the schema specified in the documentation, the API will return an input params error. It can only occur for POST and PUT requests.

    ## Path Param Error - Code 400
    It can only happen for endpoints that require uncommon parameters in their path - i.e. the availability list of a member shown by date: `/members/{id}/availability_lists/{date}`.

    # Help

    ## Contact us
    If you cannot find the information you are looking for in this guide, you can contact us at the following email address: <a href='mailto:api@agendrix.com'>api@agendrix.com</a>.
  version: "1"
servers:
  - url: https://api.agendrix.com/v1
security:
  - oauth:
      - read
      - write
tags:
  - name: AvailabilityListRequests
    description: Availability list requests operations
  - name: BillboardTags
    description: Billboard tags operations
  - name: BillboardThreads
    description: Billboard threads operations
  - name: ClockLogs
    description: Clock logs operations
  - name: Comments
    description: Comments operations
  - name: LeaveRequests
    description: Leave requests operations
  - name: LeaveTypes
    description: Leave types operations
  - name: MemberTimeBankTransactions
    description: Member time bank transactions operations
  - name: Members
    description: Members operations
  - name: Payrolls
    description: Payrolls operations
  - name: Positions
    description: Positions operations
  - name: Publications
    description: Publications operations
  - name: Resources
    description: Resources operations
  - name: SchedulerProjections
    description: Scheduler projections operations
  - name: Shifts
    description: Shifts operations
  - name: Sites
    description: Sites operations
  - name: TimeBanks
    description: Time banks operations
  - name: TimeEntries
    description: Time entries operations
  - name: TransferRequests
    description: Transfer requests operations
  - name: Users
    description: Users operations
paths:
  "/comments":
    get:
      summary: Get paginated comments
      description: Return paginated comments
      tags:
        - Comments
      operationId: index_comment
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: search[commentable_id]
          in: query
          description: The commentable_id used for the search applied on the query.
          schema:
            type: string
        - name: search[commentable_type]
          in: query
          description: The commentable_type used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a comment
      description: Create a comment from the body
      tags:
        - Comments
      operationId: create_comment
      requestBody:
        "$ref": "#/components/requestBodies/CommentCreate"
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/comments/{id}":
    get:
      summary: Get one comment
      description: Return the comment's id holder
      tags:
        - Comments
      operationId: show_comment
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a comment
      description: Update a comment from the body
      tags:
        - Comments
      operationId: update_comment
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/CommentUpdate"
      responses:
        200:
          "$ref": "#/components/responses/CommentSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a comment
      description: Delete a comment from the body
      tags:
        - Comments
      operationId: delete_comment
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/payrolls":
    get:
      summary: Get paginated payrolls
      description: Return paginated payrolls
      tags:
        - Payrolls
      operationId: index_payroll
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[start_at]
          in: query
          description:
            Sorts the query by the start_at value, which must be 'asc' or
            'desc', case insensitive.
          schema:
            type: string
        - name: sort[end_at]
          in: query
          description:
            Sorts the query by the end_at value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: search[status]
          in: query
          description: The status used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/PayrollSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/payrolls/{id}":
    get:
      summary: Get one payroll
      description: Return the payroll's id holder
      tags:
        - Payrolls
      operationId: show_payroll
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PayrollSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a payroll
      description: Update a payroll from the body
      tags:
        - Payrolls
      operationId: update_payroll
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/PayrollUpdate"
      responses:
        200:
          "$ref": "#/components/responses/PayrollSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/transfer_requests":
    get:
      summary: Get paginated transfer requests
      description: Return paginated transfer requests
      tags:
        - TransferRequests
      operationId: index_transfer_request
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: search[member_id]
          in: query
          description: The member_id used for the search applied on the query.
          schema:
            type: string
        - name: search[created_by]
          in: query
          description: The created_by used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/TransferRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/transfer_requests/{id}":
    get:
      summary: Get one transfer request
      description: Return the transfer request's id holder
      tags:
        - TransferRequests
      operationId: show_transfer_request
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/TransferRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/member_time_bank_transactions":
    get:
      summary: Get paginated member time bank transactions
      description: Return paginated member time bank transactions
      tags:
        - MemberTimeBankTransactions
      operationId: index_member_time_bank_transaction
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[date]
          in: query
          description:
            Sorts the query by the date value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: search[member_id]
          in: query
          description: The member_id used for the search applied on the query.
          schema:
            type: string
        - name: search[member_time_bank_id]
          in: query
          description: The member_time_bank_id used for the search applied on the query.
          schema:
            type: string
        - name: search[from]
          in: query
          description: The from date used for the search applied on the query.
          schema:
            type: string
        - name: search[to]
          in: query
          description: The to date used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberTimeBankTransactionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/member_time_bank_transactions/{id}":
    get:
      summary: Get one member time bank transaction
      description: Return the member time bank transaction's id holder
      tags:
        - MemberTimeBankTransactions
      operationId: show_member_time_bank_transaction
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/MemberTimeBankTransactionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/publications":
    get:
      summary: Get paginated publications
      description: Return paginated publications
      tags:
        - Publications
      operationId: index_publication
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/PublicationSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/publications/{id}":
    get:
      summary: Get one publication
      description: Return the publication's id holder
      tags:
        - Publications
      operationId: show_publication
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PublicationSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/resources":
    get:
      summary: Get paginated resources
      description: Return paginated resources
      tags:
        - Resources
      operationId: index_resource
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: search[name]
          in: query
          description: The name used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a resource
      description: Create a resource from the body
      tags:
        - Resources
      operationId: create_resource
      requestBody:
        "$ref": "#/components/requestBodies/ResourceCreate"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/resources/{id}":
    get:
      summary: Get one resource
      description: Return the resource's id holder
      tags:
        - Resources
      operationId: show_resource
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a resource
      description: Update a resource from the body
      tags:
        - Resources
      operationId: update_resource
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/ResourceUpdate"
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a resource
      description: Delete a resource from the body
      tags:
        - Resources
      operationId: delete_resource
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/billboard_tags":
    get:
      summary: Get paginated billboard tags
      description: Return paginated billboard tags
      tags:
        - BillboardTags
      operationId: index_billboard_tag
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a billboard tag
      description: Create a billboard tag from the body
      tags:
        - BillboardTags
      operationId: create_billboard_tag
      requestBody:
        "$ref": "#/components/requestBodies/BillboardTagCreate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/billboard_tags/{id}":
    get:
      summary: Get one billboard tag
      description: Return the billboard tag's id holder
      tags:
        - BillboardTags
      operationId: show_billboard_tag
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a billboard tag
      description: Update a billboard tag from the body
      tags:
        - BillboardTags
      operationId: update_billboard_tag
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/BillboardTagUpdate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a billboard tag
      description: Delete a billboard tag from the body
      tags:
        - BillboardTags
      operationId: delete_billboard_tag
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/clock_logs":
    get:
      summary: Get paginated clock logs
      description: Return paginated clock logs
      tags:
        - ClockLogs
      operationId: index_clock_log
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[created_at]
          in: query
          description:
            Sorts the query by the created_at value, which must be 'asc'
            or 'desc', case insensitive.
          schema:
            type: string
        - name: search[shift_id]
          in: query
          description: The shift_id used for the search applied on the query.
          schema:
            type: string
        - name: search[member_id]
          in: query
          description: The member_id used for the search applied on the query.
          schema:
            type: string
        - name: search[job_site_id]
          in: query
          description: The job_site_id used for the search applied on the query.
          schema:
            type: string
        - name: search[success]
          in: query
          description: The job_site_id used for the search applied on the query.
          schema:
            type: string
        - name: search[has_questions]
          in: query
          description: The job_site_id used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/ClockLogSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/clock_logs/{id}":
    get:
      summary: Get one clock log
      description: Return the clock log's id holder
      tags:
        - ClockLogs
      operationId: show_clock_log
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ClockLogSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/scheduler_projections":
    get:
      summary: Get paginated scheduler projections
      description: Return paginated scheduler projections
      tags:
        - SchedulerProjections
      operationId: index_scheduler_projection
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[date]
          in: query
          description:
            Sorts the query by the date value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: search[site_id]
          in: query
          description: The site_id used for the search applied on the query.
          schema:
            type: string
        - name: search[position_id]
          in: query
          description: The position_id used for the search applied on the query.
          schema:
            type: string
        - name: search[integration_name]
          in: query
          description: The integration_name used for the search applied on the query.
          schema:
            type: string
        - name: search[from]
          in: query
          description: The from date time used for the search applied on the query.
          schema:
            type: string
        - name: search[to]
          in: query
          description: The to date time used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a scheduler projection
      description: Create a scheduler projection from the body
      tags:
        - SchedulerProjections
      operationId: create_scheduler_projection
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionCreate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/scheduler_projections/{id}":
    get:
      summary: Get one scheduler projection
      description: Return the scheduler projection's id holder
      tags:
        - SchedulerProjections
      operationId: show_scheduler_projection
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a scheduler projection
      description: Update a scheduler projection from the body
      tags:
        - SchedulerProjections
      operationId: update_scheduler_projection
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionUpdate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a scheduler projection
      description: Delete a scheduler projection from the body
      tags:
        - SchedulerProjections
      operationId: delete_scheduler_projection
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/scheduler_projections/bulk":
    put:
      summary: Update many scheduler projections
      description: Update many scheduler projections from the body
      tags:
        - SchedulerProjections
      operationId: bulk_update_scheduler_projection
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionBulkUpdate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionBulkSuccessMany"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    post:
      summary: Create many scheduler projections
      description: Create many scheduler projections from the body
      tags:
        - SchedulerProjections
      operationId: bulk_create_scheduler_projection
      requestBody:
        "$ref": "#/components/requestBodies/SchedulerProjectionBulkCreate"
      responses:
        200:
          "$ref": "#/components/responses/SchedulerProjectionBulkSuccessMany"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/sites":
    get:
      summary: Get paginated sites
      description: Return paginated sites
      tags:
        - Sites
      operationId: index_site
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a site
      description: Create a site from the body
      tags:
        - Sites
      operationId: create_site
      requestBody:
        "$ref": "#/components/requestBodies/SiteCreate"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/sites/{id}":
    get:
      summary: Get one site
      description: Return the site's id holder
      tags:
        - Sites
      operationId: show_site
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a site
      description: Update a site from the body
      tags:
        - Sites
      operationId: update_site
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/SiteUpdate"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a site
      description: Delete a site from the body
      tags:
        - Sites
      operationId: delete_site
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/billboard_threads":
    get:
      summary: Get paginated billboard threads
      description: Return paginated billboard threads
      tags:
        - BillboardThreads
      operationId: index_billboard_thread
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[start_date]
          in: query
          description:
            Sorts the query by the start_date value, which must be 'asc'
            or 'desc', case insensitive.
          schema:
            type: string
        - name: sort[end_date]
          in: query
          description:
            Sorts the query by the end_date value, which must be 'asc' or
            'desc', case insensitive.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a billboard thread
      description: Create a billboard thread from the body
      tags:
        - BillboardThreads
      operationId: create_billboard_thread
      requestBody:
        "$ref": "#/components/requestBodies/BillboardThreadCreate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/billboard_threads/{id}":
    get:
      summary: Get one billboard thread
      description: Return the billboard thread's id holder
      tags:
        - BillboardThreads
      operationId: show_billboard_thread
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a billboard thread
      description: Update a billboard thread from the body
      tags:
        - BillboardThreads
      operationId: update_billboard_thread
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/BillboardThreadUpdate"
      responses:
        200:
          "$ref": "#/components/responses/BillboardThreadSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a billboard thread
      description: Delete a billboard thread from the body
      tags:
        - BillboardThreads
      operationId: delete_billboard_thread
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/billboard_threads/{id}/positions":
    get:
      summary: Get paginated positions
      description: Return paginated positions
      tags:
        - BillboardThreads
      operationId: index_billboard_thread_positions
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[name]
          in: query
          description:
            Sorts the query by the name value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: sort[rank]
          in: query
          description:
            Sorts the query by the rank value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: search[name]
          in: query
          description: The name used for the search applied on the query.
          schema:
            type: string
        - name: search[rank]
          in: query
          description: The rank used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/billboard_threads/{id}/sites":
    get:
      summary: Get paginated sites
      description: Return paginated sites
      tags:
        - BillboardThreads
      operationId: index_billboard_thread_sites
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/billboard_threads/{id}/tags":
    get:
      summary: Get paginated billboard tags
      description: Return paginated billboard tags
      tags:
        - BillboardThreads
      operationId: index_billboard_thread_billboard_tags
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/BillboardTagSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/time_banks":
    get:
      summary: Get paginated time banks
      description: Return paginated time banks
      tags:
        - TimeBanks
      operationId: index_time_bank
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[name]
          in: query
          description:
            Sorts the query by the name value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: search[name]
          in: query
          description: The name used for the search applied on the query.
          schema:
            type: string
        - name: search[time_off]
          in: query
          description:
            Returns only the time off banks if set to true, excludes them
            if set to false.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/TimeBankSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/time_banks/{id}":
    get:
      summary: Get one time bank
      description: Return the time bank's id holder
      tags:
        - TimeBanks
      operationId: show_time_bank
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/TimeBankSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/users/me":
    get:
      summary: Get one user
      description: Return your user data
      tags:
        - Users
      operationId: show_user
      responses:
        200:
          "$ref": "#/components/responses/UserSuccessOne"
    put:
      summary: Update a user
      description: Update your user data
      tags:
        - Users
      operationId: update_user
      requestBody:
        "$ref": "#/components/requestBodies/UserUpdate"
      responses:
        200:
          "$ref": "#/components/responses/UserSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/availability_list_requests":
    get:
      summary: Get paginated availability list requests
      description: Return paginated availability list requests
      tags:
        - AvailabilityListRequests
      operationId: index_availability_list_request
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: search[member_id]
          in: query
          description: The member_id used for the search applied on the query.
          schema:
            type: string
        - name: search[created_by]
          in: query
          description: The created_by used for the search applied on the query.
          schema:
            type: string
        - name: search[availability_list_id]
          in: query
          description: The availability_list_id used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/availability_list_requests/{id}":
    get:
      summary: Get one availability list request
      description: Return the availability list request's id holder
      tags:
        - AvailabilityListRequests
      operationId: show_availability_list_request
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/time_entries":
    get:
      summary: Get paginated time entries
      description: Return paginated time entries
      tags:
        - TimeEntries
      operationId: index_time_entry
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[start_at]
          in: query
          description:
            Sorts the query by the start_at value, which must be 'asc' or
            'desc', case insensitive.
          schema:
            type: string
        - name: sort[end_at]
          in: query
          description:
            Sorts the query by the end_at value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: sort[date]
          in: query
          description:
            Sorts the query by the date value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: search[time_off]
          in: query
          description:
            The time_off status - true or false - used for the search applied
            on the query.
          schema:
            type: string
        - name: search[position_id]
          in: query
          description: The position_id used for the search applied on the query.
          schema:
            type: string
        - name: search[site_id]
          in: query
          description: The site_id used for the search applied on the query.
          schema:
            type: string
        - name: search[member_id]
          in: query
          description: The member_id used for the search applied on the query.
          schema:
            type: string
        - name: search[approved]
          in: query
          description:
            The approved status - true of false - used for the search applied
            on the query.
          schema:
            type: string
        - name: search[from]
          in: query
          description: The from date used for the search applied on the query.
          schema:
            type: string
        - name: search[to]
          in: query
          description: The to date used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a time entry
      description: Create a time entry from the body
      tags:
        - TimeEntries
      operationId: create_time_entry
      requestBody:
        "$ref": "#/components/requestBodies/TimeEntryCreate"
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/time_entries/{id}":
    get:
      summary: Get one time entry
      description: Return the time entry's id holder
      tags:
        - TimeEntries
      operationId: show_time_entry
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a time entry
      description: Update a time entry from the body
      tags:
        - TimeEntries
      operationId: update_time_entry
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/TimeEntryUpdate"
      responses:
        200:
          "$ref": "#/components/responses/TimeEntrySuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a time entry
      description: Delete a time entry from the body
      tags:
        - TimeEntries
      operationId: delete_time_entry
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/time_entries/{id}/activities":
    get:
      summary: Get paginated activities
      description: Return paginated activities
      tags:
        - TimeEntries
      operationId: index_time_entry_activities
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[created_at]
          in: query
          description:
            Sorts the query by the created_at value, which must be 'asc'
            or 'desc', case insensitive.
          schema:
            type: string
        - name: search[trackable_id]
          in: query
          description: The trackable_id used for the search applied on the query.
          schema:
            type: string
        - name: search[trackable_type]
          in: query
          description: The trackable_type used for the search applied on the query.
          schema:
            type: string
        - name: search[owner_id]
          in: query
          description: The owner_id used for the search applied on the query.
          schema:
            type: string
        - name: search[owner_type]
          in: query
          description: The owner_type used for the search applied on the query.
          schema:
            type: string
        - name: search[key]
          in: query
          description: The key used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/ActivitySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/positions":
    get:
      summary: Get paginated positions
      description: Return paginated positions
      tags:
        - Positions
      operationId: index_position
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[name]
          in: query
          description:
            Sorts the query by the name value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: sort[rank]
          in: query
          description:
            Sorts the query by the rank value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: search[name]
          in: query
          description: The name used for the search applied on the query.
          schema:
            type: string
        - name: search[rank]
          in: query
          description: The rank used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a position
      description: Create a position from the body
      tags:
        - Positions
      operationId: create_position
      requestBody:
        "$ref": "#/components/requestBodies/PositionCreate"
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/positions/{id}":
    get:
      summary: Get one position
      description: Return the position's id holder
      tags:
        - Positions
      operationId: show_position
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a position
      description: Update a position from the body
      tags:
        - Positions
      operationId: update_position
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/PositionUpdate"
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a position
      description: Delete a position from the body
      tags:
        - Positions
      operationId: delete_position
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members":
    get:
      summary: Get paginated members
      description: Return paginated members
      tags:
        - Members
      operationId: index_member
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: search[main_position_id]
          in: query
          description: The main_position_id used for the search applied on the query.
          schema:
            type: string
        - name: search[main_site_id]
          in: query
          description: The main_site_id used for the search applied on the query.
          schema:
            type: string
        - name: search[visible]
          in: query
          description: The visible used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a member
      description: Create a member from the body
      tags:
        - Members
      operationId: create_member
      requestBody:
        "$ref": "#/components/requestBodies/MemberCreate"
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/members/{id}":
    get:
      summary: Get one member
      description: Return the member's id holder
      tags:
        - Members
      operationId: show_member
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a member
      description: Update a member from the body
      tags:
        - Members
      operationId: update_member
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/MemberUpdate"
      responses:
        200:
          "$ref": "#/components/responses/MemberSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a member
      description: Delete a member from the body
      tags:
        - Members
      operationId: delete_member
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members/{id}/availability_lists/{date}":
    get:
      summary: Get one availability list
      description: Return the active availability list data for the specified date
      tags:
        - Members
      operationId: show_availability_list
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/Date"
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListSuccessOne"
        400:
          "$ref": "#/components/responses/PathParamFailure"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/members/{id}/availability_lists":
    get:
      summary: Get paginated availability lists
      description: Return paginated availability lists
      tags:
        - Members
      operationId: index_member_availability_lists
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: search[status]
          in: query
          description: The status used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/AvailabilityListSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/member_sites":
    get:
      summary: Get paginated member sites
      description: Return paginated member sites
      tags:
        - Members
      operationId: index_member_member_sites
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: search[role]
          in: query
          description:
            The role used for the search applied on the query. Must be 'member',
            'supervisor' or 'manager'.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberSiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/member_time_banks":
    get:
      summary: Get paginated member time banks
      description: Return paginated member time banks
      tags:
        - Members
      operationId: index_member_member_time_banks
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: search[time_bank_id]
          in: query
          description: The time_bank_id used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/MemberTimeBankSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/positions":
    get:
      summary: Get paginated positions
      description: Return paginated positions
      tags:
        - Members
      operationId: index_member_positions
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[name]
          in: query
          description:
            Sorts the query by the name value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: sort[rank]
          in: query
          description:
            Sorts the query by the rank value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: search[name]
          in: query
          description: The name used for the search applied on the query.
          schema:
            type: string
        - name: search[rank]
          in: query
          description: The rank used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/PositionSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/members/{id}/sites":
    get:
      summary: Get paginated sites
      description: Return paginated sites
      tags:
        - Members
      operationId: index_member_sites
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/SiteSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts":
    get:
      summary: Get paginated shifts
      description: Return paginated shifts
      tags:
        - Shifts
      operationId: index_shift
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[start_at]
          in: query
          description:
            Sorts the query by the start_at value, which must be 'asc' or
            'desc', case insensitive.
          schema:
            type: string
        - name: sort[end_at]
          in: query
          description:
            Sorts the query by the end_at value, which must be 'asc' or 'desc',
            case insensitive.
          schema:
            type: string
        - name: search[from]
          in: query
          description: The from date time used for the search applied on the query.
          required: true
          schema:
            type: string
        - name: search[to]
          in: query
          description: |-
            The to date time used for the search applied on the query. The maximun range between 'from' and 'to' must be equal or lower
                                          than 31 days.
          required: true
          schema:
            type: string
        - name: search[member_id]
          in: query
          description: The member_id used for the search applied on the query.
          schema:
            type: string
        - name: search[position_id]
          in: query
          description: The position_id used for the search applied on the query.
          schema:
            type: string
        - name: search[site_id]
          in: query
          description: The site_id used for the search applied on the query.
          schema:
            type: string
        - name: search[status]
          in: query
          description:
            The status used for the search applied on the query. Must be
            'draft' or 'published'.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a shift
      description: Create a shift from the body
      tags:
        - Shifts
      operationId: create_shift
      requestBody:
        "$ref": "#/components/requestBodies/ShiftCreate"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/shifts/{id}":
    get:
      summary: Get one shift
      description: Return the shift's id holder
      tags:
        - Shifts
      operationId: show_shift
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a shift
      description: Update a shift from the body
      tags:
        - Shifts
      operationId: update_shift
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/ShiftUpdate"
      responses:
        200:
          "$ref": "#/components/responses/ShiftSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a shift
      description: Delete a shift from the body
      tags:
        - Shifts
      operationId: delete_shift
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/shifts/{id}/activities":
    get:
      summary: Get paginated activities
      description: Return paginated activities
      tags:
        - Shifts
      operationId: index_shift_activities
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: sort[created_at]
          in: query
          description:
            Sorts the query by the created_at value, which must be 'asc'
            or 'desc', case insensitive.
          schema:
            type: string
        - name: search[trackable_id]
          in: query
          description: The trackable_id used for the search applied on the query.
          schema:
            type: string
        - name: search[trackable_type]
          in: query
          description: The trackable_type used for the search applied on the query.
          schema:
            type: string
        - name: search[owner_id]
          in: query
          description: The owner_id used for the search applied on the query.
          schema:
            type: string
        - name: search[owner_type]
          in: query
          description: The owner_type used for the search applied on the query.
          schema:
            type: string
        - name: search[key]
          in: query
          description: The key used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/ActivitySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/breaks":
    get:
      summary: Get paginated breaks
      description: Return paginated breaks
      tags:
        - Shifts
      operationId: index_shift_breaks
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/BreakSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/premium_entries":
    get:
      summary: Get paginated premium entries
      description: Return paginated premium entries
      tags:
        - Shifts
      operationId: index_shift_premium_entries
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/PremiumEntrySuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/shifts/{id}/resources":
    get:
      summary: Get paginated resources
      description: Return paginated resources
      tags:
        - Shifts
      operationId: index_shift_resources
      parameters:
        - "$ref": "#/components/parameters/PathId"
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: search[name]
          in: query
          description: The name used for the search applied on the query.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/ResourceSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
  "/leave_requests/{id}/approve":
    put:
      summary: Approve a leave request
      description: Change a pending leave request status to approved
      tags:
        - LeaveRequests
      operationId: approve_leave_request
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/leave_requests/{id}/cancel":
    put:
      summary: Cancel a leave request
      description: Change a leave request status to canceled
      tags:
        - LeaveRequests
      operationId: cancel_leave_request
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/leave_requests":
    get:
      summary: Get paginated leave requests
      description: Return paginated leave requests
      tags:
        - LeaveRequests
      operationId: index_leave_request
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
        - name: search[member_id]
          in: query
          description: The member_id used for the search applied on the query.
          schema:
            type: string
        - name: search[created_by]
          in: query
          description: The created_by used for the search applied on the query.
          schema:
            type: string
        - name: search[status]
          in: query
          description:
            The leave requests status. Valid values are approved, canceled,
            declined and pending.
          schema:
            type: string
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a leave request
      description: Create a leave request from the body
      tags:
        - LeaveRequests
      operationId: create_leave_request
      requestBody:
        "$ref": "#/components/requestBodies/LeaveRequestCreate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/leave_requests/{id}/decline":
    put:
      summary: Decline a pending leave request
      description: Change a leave request status to declined
      tags:
        - LeaveRequests
      operationId: decline_leave_request
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/leave_requests/{id}":
    get:
      summary: Get one leave request
      description: Return the leave request's id holder
      tags:
        - LeaveRequests
      operationId: show_leave_request
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a leave request
      description: Update a leave request from the body
      tags:
        - LeaveRequests
      operationId: update_leave_request
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/LeaveRequestUpdate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveRequestSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/leave_types":
    get:
      summary: Get paginated leave types
      description: Return paginated leave types
      tags:
        - LeaveTypes
      operationId: index_leave_type
      parameters:
        - "$ref": "#/components/parameters/QueryPage"
        - "$ref": "#/components/parameters/QueryLimit"
        - "$ref": "#/components/parameters/QueryPageSize"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessMany"
        400:
          "$ref": "#/components/responses/QueryParamFailure"
    post:
      summary: Create a leave type
      description: Create a leave type from the body
      tags:
        - LeaveTypes
      operationId: create_leave_type
      requestBody:
        "$ref": "#/components/requestBodies/LeaveTypeCreate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessOne"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
  "/leave_types/{id}":
    get:
      summary: Get one leave type
      description: Return the leave type's id holder
      tags:
        - LeaveTypes
      operationId: show_leave_type
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
    put:
      summary: Update a leave type
      description: Update a leave type from the body
      tags:
        - LeaveTypes
      operationId: update_leave_type
      parameters:
        - "$ref": "#/components/parameters/PathId"
      requestBody:
        "$ref": "#/components/requestBodies/LeaveTypeUpdate"
      responses:
        200:
          "$ref": "#/components/responses/LeaveTypeSuccessOne"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
        400:
          "$ref": "#/components/responses/InputParamsFailure"
    delete:
      summary: Delete a leave type
      description: Delete a leave type from the body
      tags:
        - LeaveTypes
      operationId: delete_leave_type
      parameters:
        - "$ref": "#/components/parameters/PathId"
      responses:
        200:
          "$ref": "#/components/responses/EmptySuccess"
        404:
          "$ref": "#/components/responses/NotFoundFailure"
  "/session":
    get:
      summary: Get one session
      description: Return your organization, user and member data
      tags:
        - Session
      operationId: show_session
      responses:
        200:
          "$ref": "#/components/responses/SessionSuccessOne"
components:
  schemas:
    Availability:
      type: object
      description: A detailed description of availability.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        day:
          type: integer
          description: The day of the scheduler week for the organization.
          format: int32
        start_at:
          type: string
          description: The start at time of the availability (HH:MM).
        end_at:
          type: string
          description: The end at time of the availability (HH:MM).
        available:
          type: boolean
          description: If the availability is available or not.
        all_day:
          type: boolean
          description: If the availability is all day or not.
        created_at:
          type: string
          description: When the availability was created.
          format: date-time
        updated_at:
          type: string
          description: When the availability was last updated.
          format: date-time
    Organization:
      type: object
      description: A detailed description of organization.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The organization's name.
        week_start:
          type: integer
          description:
            The index of the day for which the organization working week
            starts. Starting with sunday at 0, and ending with saturday at 6.
          format: int32
        day_start:
          type: string
          description: The hour at which the organization working day starts.
        day_end:
          type: string
          description: The hour at which the organization working day ends.
        time_zone_name:
          type: string
          description: The organization timezone's name.
        availabilities_need_approval:
          type: boolean
          description: If the availabilities needs approvals or not.
        created_at:
          type: string
          description: When the organization was created.
          format: date-time
        updated_at:
          type: string
          description: When the organization was last updated.
          format: date-time
    Break:
      type: object
      description: A detailed description of break.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        length:
          type: integer
          description: The break length, in minutes.
          format: int32
        offset:
          type: integer
          description:
            The break offset from the shift's start, in minutes. E.g.,
            a break starting at 7:30 on a shift starting at 7:00 will have an offset
            of 30.
          format: int32
        paid:
          type: boolean
          description: If the break is paid or not.
        start_at:
          type: string
          description: When the break starts.
          format: date-time
        end_at:
          type: string
          description: When the break ends.
          format: date-time
        created_at:
          type: string
          description: When the break was created.
          format: date-time
        updated_at:
          type: string
          description: When the break was last updated.
          format: date-time
    Comment:
      type: object
      description: A detailed description of comment.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        body:
          type: string
          description: The comment's body.
        commentable_id:
          type: string
          description: The id of the commented resource.
          format: uuid
        commentable_type:
          type: string
          description:
            The type of the the commented resource - shift, leave request,
            billboard thread, etc.
        editable:
          type: boolean
          description: If the comment is editable.
        deletable:
          type: boolean
          description: If the comment is deletable.
        created_at:
          type: string
          description: When the comment was created.
          format: date-time
        updated_at:
          type: string
          description: When the comment was last updated.
          format: date-time
    Payroll:
      type: object
      description: A detailed description of payroll.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        start_at:
          type: string
          description: The date time at which the payroll starts.
          format: date-time
        end_at:
          type: string
          description: The date time at which the payroll ends.
          format: date-time
        is_bankable:
          type: boolean
          description: If the payroll is bankable.
        status:
          type: string
          description: The payroll's current status.
        created_at:
          type: string
          description: When the payroll was created.
          format: date-time
        updated_at:
          type: string
          description: When the payroll was last updated.
          format: date-time
    TransferRequest:
      type: object
      description: A detailed description of transfer request.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The transfer request's member id.
          format: uuid
        created_by:
          type: string
          description: The transfer request's creator id.
          format: uuid
        justification:
          type: string
          description: The transfer request justification.
        sub_type:
          type: string
          description: The transfer request sub type.
        expired_at:
          type: string
          description: The transfer request expiration date time.
          format: date-time
        created_at:
          type: string
          description: When the transfer request was created.
          format: date-time
        updated_at:
          type: string
          description: When the transfer request was last updated.
          format: date-time
    AvailabilityList:
      type: object
      description: A detailed description of availability list.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The availability list's member id.
          format: uuid
        name:
          type: string
          description: The availability list's name.
        note:
          type: string
          description: The availability list's notes.
        week_minimum:
          type: integer
          description: The minimum number of hours per week desired by the employee.
          format: int32
        week_maximum:
          type: integer
          description: The maximum number of hours per week desired by the employee.
          format: int32
        repeat_interval:
          type: boolean
          description:
            "How often the availability list is repeated, in weeks (e.g.,
            1: every week, null: is not repeated)."
        status:
          type: string
          description: The availability list's status.
        cancelable:
          type: boolean
          description: If the availability list is cancelable.
        start_date:
          type: string
          description: When the availability list starts.
          format: date
        end_date:
          type: string
          description: When the availability list ends.
          format: date
        created_at:
          type: string
          description: When the availability list was created.
          format: date-time
        updated_at:
          type: string
          description: When the availability list was last updated.
          format: date-time
        availabilities:
          type: array
          description: The availability list availabilities.
          items:
            "$ref": "#/components/schemas/Availability"
    MemberTimeBankTransaction:
      type: object
      description: A detailed description of member time bank transaction.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The unique identifier of this transaction's member.
          format: uuid
        created_by_id:
          type: string
          description: The unique identifier of this transaction's creator.
          format: uuid
        member_time_bank_id:
          type: string
          description: The unique identifier of this transaction's time bank.
          format: uuid
        time_bank_id:
          type: string
          description: The unique identifier of this transaction's time bank.
          format: uuid
        position_id:
          type: string
          description: The unique identifier of this transaction's position.
          format: uuid
        site_id:
          type: string
          description: The unique identifier of this transaction's site.
          format: uuid
        "no":
          type: integer
          description: The unique sequential number of this transaction in the bank
          format: int32
        revert_no:
          type: integer
          description:
            The unique sequential number of the transaction this transaction
            reverted
          format: int32
        action:
          type: string
          description: The transaction's action on the time bank.
        notes:
          type: string
          description: The transaction's notes
        date:
          type: string
          description: The transaction's date.
          format: date
        multiplier:
          type: number
          description: The transaction's minutes multiplier.
          format: float
        rate_regular:
          type: number
          description: The transaction's regular rate.
          format: float
        rate_overtime:
          type: number
          description: The transaction's overtime rate.
          format: float
        total_minutes:
          type: integer
          description: The transaction's total minutes after applying the multiplier
          format: int32
        minutes:
          type: integer
          description: The transaction's minutes before applying the multiplier
          format: int32
        regular_minutes:
          type: integer
          description: The transaction's regular minutes.
          format: int32
        overtime_minutes:
          type: integer
          description: The transaction's overtime minutes.
          format: int32
        paid_minutes:
          type: integer
          description: The transaction's paid minutes.
          format: int32
        balance:
          type: integer
          description: The current balance in the bank up to this transaction, inclusively
          format: int32
        created_at:
          type: string
          description: When the transaction was created.
          format: date-time
        updated_at:
          type: string
          description: When the transaction was last updated.
          format: date-time
    Premium:
      type: object
      description: A detailed description of premium.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The premium's name.
        weekdays:
          type: array
          description: Which weekdays the premium is applied to.
          items:
            type: integer
            format: int32
        start_at:
          type: string
          description: When the premium starts.
        end_at:
          type: string
          description: When the premium ends.
        multiplier:
          type: number
          description: What the premium hours are multiplied by.
          format: float
        default_value:
          type: integer
          description: The premium's default value.
          format: int32
        compute_manually:
          type: boolean
          description: If the premium has to be applied manually.
        compute_entire_shifts:
          type: boolean
          description:
            If the premium is applied to the entirety of work shifts that
            overlap the premium period.
        only_time_offs:
          type: boolean
          description: If the premium is only applied to time offs.
        all_day:
          type: boolean
          description: If the premium is applied to every hours of the day.
        all_week:
          type: boolean
          description: If the premium is applied to every day of the week.
        all_leave_types:
          type: boolean
          description: If the premium is applied to all leave types.
        all_sites:
          type: boolean
          description: If the premium is applied to all sites.
        all_members:
          type: boolean
          description: If the premium is applied to all employees.
        all_positions:
          type: boolean
          description: If the premium is applied to all positions.
        created_at:
          type: string
          description: When the premium was created.
          format: date-time
        updated_at:
          type: string
          description: When the premium was last updated.
          format: date-time
    Publication:
      type: object
      description: A detailed description of publication.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The publication's member id.
          format: uuid
        site_id:
          type: string
          description: The publication's site id.
          format: uuid
        from:
          type: string
          description: Starting date at which shifts are published.
          format: date
        to:
          type: string
          description: Ending date at which shifts are published.
          format: date
        created_at:
          type: string
          description: When the publication was created.
          format: date-time
    Resource:
      type: object
      description: A detailed description of resource.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The resource's name.
        "no":
          type: string
          description: The resource's unique short identifier.
        description:
          type: string
          description: The resource's description.
        address:
          type: string
          description: The resource's address.
        exclusive:
          type: boolean
          description: If the resource is exclusive.
        type_job_site:
          type: boolean
          description: If the resource is a job site.
        type_equipment:
          type: boolean
          description: If the resource is an equipment.
        private_comments_count:
          type: integer
          description: The number of private comments on the resource.
          format: int32
        clock_logs_count:
          type: integer
          description: The number of clock logs on the resource.
          format: int32
        public_comments_count:
          type: integer
          description: The number of public comments on the resource.
          format: int32
        minimum_paid_minutes_per_entry:
          type: integer
          description: The minimum amount of paid minutes per entry on the resource.
          format: int32
        created_at:
          type: string
          description: When the resource was created.
          format: date-time
        updated_at:
          type: string
          description: When the resource was last updated.
          format: date-time
    BillboardTag:
      type: object
      description: A detailed description of billboard tag.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The tag's name.
        unread_count:
          type: integer
          description: Number of unread threads with this tag.
          format: int32
        created_at:
          type: string
          description: When the tag was created.
          format: date-time
        updated_at:
          type: string
          description: When the tag was last updated.
          format: date-time
    ClockLog:
      type: object
      description: A detailed description of clock log.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The unique identifier of the clock log's member.
          format: uuid
        time_entry_id:
          type: string
          description: The unique identifier of the clock log's time entry.
          format: uuid
        shift_id:
          type: string
          description: The unique identifier of the clock log's shift.
          format: uuid
        job_site_id:
          type: string
          description: The unique identifier of the clock log's job site.
          format: uuid
        code:
          type: string
          description: The code used to clock.
        action:
          type: string
          description: The type of clock. Whether clocked_in or clocked_out.
        type:
          type: string
          description: The type of device used to clock.
        params:
          type: object
          description: The clock's parameters.
        success:
          type: boolean
          description: Whether or not the clock was a success.
        created_at:
          type: string
          description: When the clock log was created.
          format: date-time
        updated_at:
          type: string
          description: When the clock log was last updated.
          format: date-time
    TimeOffPaymentConstraint:
      type: object
      description:
        The time off's constraints. (Which days of the week are considered
        paid for the time off.)
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        paid_weekdays:
          type: array
          description: |-
            The days of the week that are considered paid for the time off, with 0 as monday, up to 6 as sunday.
                               Only one occurance of each day can be specified.
          items:
            type: integer
            format: int32
    MemberTimeBank:
      type: object
      description: A detailed description of member time bank.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The member's unique id.
          format: uuid
        time_bank_id:
          type: string
          description: The time bank's unique id.
          format: uuid
        processed_transactions_count:
          type: integer
          description: The member's time bank amount of processed transactions.
          format: int32
        processed_total_minutes:
          type: integer
          description: The member's time bank processed total minutes.
          format: int32
        pending_total_minutes:
          type: integer
          description: The member's time bank pending total minutes.
          format: int32
        available_total_minutes:
          type: integer
          description: The member's time bank available total minutes.
          format: int32
        created_at:
          type: string
          description: When the member time bank was created.
          format: date-time
        updated_at:
          type: string
          description: When the member time bank was last updated.
          format: date-time
    SchedulerProjection:
      type: object
      description: A detailed description of scheduler projection.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        site_id:
          type: string
          description: The unique identifier of the scheduler projection's site.
          format: uuid
        position_id:
          type: string
          description: The unique identifier of the scheduler projection's position.
          format: uuid
        date:
          type: string
          description: The scheduler projection's date.
          format: date
        hours:
          type: number
          description: The number of expected scheduled hours.
          format: float
        revenues:
          type: number
          description: The amount of expected revenues.
          format: float
        productivity:
          type: number
          description: The number of expected productivity units.
          format: float
        created_at:
          type: string
          description: When the scheduler projection was created.
          format: date-time
        updated_at:
          type: string
          description: When the scheduler projection was last updated.
          format: date-time
    Location:
      type: object
      description: A detailed description of location.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        locatable_id:
          type: string
          description: The locatable object's unique id.
          format: uuid
        locatable_type:
          type: string
          description: The locatable object's type.
        latitude:
          type: number
          description: The location's latitude.
          format: float
        longitude:
          type: number
          description: The location's longitude.
          format: float
        created_at:
          type: string
          description: When the location was created.
          format: date-time
        updated_at:
          type: string
          description: When the location was last updated.
          format: date-time
    Site:
      type: object
      description: A detailed description of site.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The site's name.
        address:
          type: string
          description: The site's address.
        instructions:
          type: string
          description: The site's additional information.
        created_at:
          type: string
          description: When the site was created.
          format: date-time
        updated_at:
          type: string
          description: When the site was last updated.
          format: date-time
        location:
          "$ref": "#/components/schemas/Location"
    TimeBank:
      type: object
      description: A detailed description of time bank.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The time bank's name.
        multiplier:
          type: number
          description: The time bank's multiplier.
          format: float
        leave_type_id:
          type: string
          description: The time off bank's leave type id.
          format: uuid
        created_at:
          type: string
          description: When the time bank was created.
          format: date-time
        updated_at:
          type: string
          description: When the time bank was last updated.
          format: date-time
    Profile:
      type: object
      description: A detailed description of profile.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        first_name:
          type: string
          description: The profile's first name.
        last_name:
          type: string
          description: The profile's last name.
        full_name:
          type: string
          description: The profile's full name.
        email:
          type: string
          description: The profile's email.
          format: email
        birthdate:
          type: string
          description: The profile's birthdate.
          format: date
        civic_address:
          type: string
          description: The profile's civic address.
        document_id:
          type: string
          description: The unique identifier of the profile's picture.
        phone_1_number:
          type: string
          description: The profile's first phone number.
          format: phone
        phone_2_number:
          type: string
          description: The profile's second phone number.
          format: phone
        phone_3_number:
          type: string
          description: The profile's third phone number.
          format: phone
        phone_1_type:
          type: string
          description: The profile's first phone type.
        phone_2_type:
          type: string
          description: The profile's second phone type.
        phone_3_type:
          type: string
          description: The profile's third phone type.
        created_at:
          type: string
          description: When the profile was created.
          format: date-time
        updated_at:
          type: string
          description: When the profile was last updated.
          format: date-time
    User:
      type: object
      description: A detailed description of user.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        email:
          type: string
          description: The user's email.
          format: email
        unconfirmed_email:
          type: string
          description: The user's unconfirmed email.
          format: email
        email_notifications:
          type: boolean
          description: If the user receives email notifications.
        push_notifications:
          type: boolean
          description: If the user receives notifications in the mobile app.
        sms_notifications:
          type: boolean
          description: If the user receives SMS notifications.
        sms_notifications_phone_status:
          type: string
          description: If the phone number's confirmation status, pending or confirmed.
        sms_notifications_phone_number:
          type: string
          description: The phone number at which the user receives the sms notifications
        sms_available:
          type: boolean
          description: If SMS notifications are available for this member.
        sms_blacklisted_numbers:
          type: array
          description:
            A list of phone numbers that have been blacklisted and can't
            receive notifications.
          items:
            type: string
        disabled_notifications:
          type: array
          description: A list of the notifications this user has disabled.
          items:
            type: string
        shift_reminder_time:
          type: integer
          description: When the user is reminded of an upcoming shift, in minutes.
          format: int32
        last_sign_in_at:
          type: string
          description: When the user has last signed in.
          format: date-time
        sign_in_count:
          type: integer
          description: The number of times the user has signed in.
          format: int32
        unconfirmed:
          type: boolean
          description: If the user's email is unconfirmed.
        confirmed_at:
          type: string
          description: When the user's email was confirmed.
          format: date-time
        locale:
          type: string
          description: The user's language.
        time_format:
          type: integer
          description: The user's time format, 12 or 24.
          format: int32
        time_zone_name:
          type: string
          description: The user's timezone name.
        time_zone_identifier:
          type: string
          description: The user's timezone identifier.
        last_seen_at:
          type: string
          description: When the user was last seen doing an action.
          format: date-time
        created_at:
          type: string
          description: When the user was created.
          format: date-time
        updated_at:
          type: string
          description: When the user was last updated.
          format: date-time
        profile:
          "$ref": "#/components/schemas/Profile"
    AvailabilityListRequest:
      type: object
      description: A detailed description of availability list request.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The availability list request's member id.
          format: uuid
        created_by:
          type: string
          description: The availability list request's creator id.
          format: uuid
        availability_list_id:
          type: string
          description: The availabitlity list request's availability list id.
          format: uuid
        expired_at:
          type: string
          description: The availability list request expiration date time.
          format: date-time
        created_at:
          type: string
          description: When the availability list request was created.
          format: date-time
        updated_at:
          type: string
          description: When the availability list request was last updated.
          format: date-time
    TimeEntry:
      type: object
      description: A detailed description of time entry.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        unpaid_break:
          type: integer
          description: Unpaid break minutes for the time entry.
          format: int32
        paid_break:
          type: integer
          description: Paid break minutes for the time entry.
          format: int32
        length:
          type: integer
          description: The time entry's length.
          format: int32
        overwritten_length_minutes:
          type: integer
          description: The time entry's custom length.
          format: int32
        regular_minutes:
          type: integer
          description: The amount of regular time in the time entry, in minutes.
          format: int32
        overtime_minutes:
          type: integer
          description: The amount of overtime in the time entry, in minutes.
          format: int32
        premium_minutes:
          type: integer
          description: The time entry's extra minutes granted by premiums.
          format: int32
        premium_entries_count:
          type: integer
          description: The number of premium entries for the time entry.
          format: int32
        position_id:
          type: string
          description: The time entry's position id.
          format: uuid
        site_id:
          type: string
          description: The time entry's site id.
          format: uuid
        member_site_position_id:
          type: string
          description: The time entry's member site position id.
          format: uuid
        member_id:
          type: string
          description: The time entry's member id.
          format: uuid
        shift_id:
          type: string
          description: The time entry's shift id.
          format: uuid
        time_off:
          type: boolean
          description: If the time entry is a time off.
        time_off_length:
          type: integer
          description: The length of the time off.
          format: int32
        time_off_leave_type_id:
          type: string
          description: The unique identifier of the leave type.
          format: uuid
        time_off_paid:
          type: boolean
          description: If the time off is paid.
        date:
          type: string
          description: The time entry's date.
          format: date
        start_at:
          type: string
          description: The date time at which the time entry starts.
          format: date-time
        end_at:
          type: string
          description: The date time at which the time entry ends.
          format: date-time
        start_at_clock_notes:
          type: string
          description: Note left by the employee while clocking in.
        end_at_clock_notes:
          type: string
          description: Note left by the employee while clocking out.
        break_started_at:
          type: string
          description: The date time at which the time entry break started.
          format: date-time
        break_type:
          type: string
          description: The time entry break's type.
        approved_suggested_end_at:
          type: boolean
          description: If the clock out time suggested by the employee has been approved.
        suggested_end_at:
          type: string
          description: The clock out time suggested by the employee.
        suggested_end_at_justification:
          type: string
          description: The employee's explanation for the suggested clock out time.
        suggested_end_at_confirmed_at:
          type: string
          description: When the suggested clock out time has been approved.
          format: date-time
        approved:
          type: boolean
          description: If the time entry has been approved.
        has_notes:
          type: boolean
          description: If the time entry has notes.
        has_caller_phone_number:
          type: boolean
          description: If the time entry has been clock in or out using a phone.
        start_at_clock_caller_phone_number:
          type: string
          description: The phone number used for clocking in.
        end_at_clock_caller_phone_number:
          type: string
          description: The phone number used for clocking out.
        rate_regular:
          type: number
          description: The regular rate for the time entry.
          format: float
        rate_overtime:
          type: number
          description: The overtime rate for the time entry.
          format: float
        notes:
          type: string
          description: The time entry notes.
        start_at_clock_job_site_id:
          type: string
          description:
            The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        end_at_clock_job_site_id:
          type: string
          description:
            The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        time_off_resource_id:
          type: string
          description: The unique identifier of the time off's resource.
          format: uuid
        created_at:
          type: string
          description: When the time entry was created.
          format: date-time
        updated_at:
          type: string
          description: When the time entry was last updated.
          format: date-time
    Position:
      type: object
      description: A detailed description of position.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The position's name.
        normalized_name:
          type: string
          description: The position's normalized name.
        rank:
          type: integer
          description: The position's rank.
          format: int32
        color:
          type: string
          description: The position's color.
        color_formatted:
          type: string
          description: The position's formatted color.
        parent_id:
          type: string
          description:
            The unique identifier of the position's parent. If this is
            present, it means this is a sub-position.
        created_at:
          type: string
          description: When the position was created.
          format: date-time
        updated_at:
          type: string
          description: When the position was last updated.
          format: date-time
    PremiumEntry:
      type: object
      description: A detailed description of premium entry.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        premium_id:
          type: string
          description: The premium's unique identifier.
          format: uuid
        entry_id:
          type: string
          description: The premium's entry unique identifier.
          format: uuid
        entry_minutes:
          type: integer
          description: The number of minutes the premium is applied to.
          format: int32
        minutes:
          type: integer
          description: The number of extra minutes added by the premium.
          format: int32
        manual:
          type: boolean
          description: If the premium is manual.
    Activity:
      type: object
      description: A detailed description of activity.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        trackable_id:
          type: string
          description: The activity's trackable id.
          format: uuid
        trackable_type:
          type: string
          description: The activity's trackable type.
        owner_id:
          type: string
          description: The activity's owner id.
          format: uuid
        owner_type:
          type: string
          description: The activity's owner type.
        key:
          type: string
          description: The activity's key.
        created_at:
          type: string
          description: When the activitie was created.
          format: date-time
        updated_at:
          type: string
          description: When the activitie was last updated.
          format: date-time
        parameters:
          type: object
          description: The activity's parameters.
    Member:
      type: object
      description: A detailed description of member.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        user_id:
          type: string
          description: The unique identifier of this member's user.
          format: uuid
        profile_id:
          type: string
          description: The unique identifier of this member's profile.
          format: uuid
        identification_number:
          type: string
          description: The member's identification number.
        highest_role:
          type: string
          description:
            The highest role associated to this user. Can either be member,
            supervisor or manager.
        visible_rates:
          type: boolean
          description:
            Whether this member can see rates and costs, depending on the
            organization's settings.
        color:
          type: string
          description: The color associated to the organization for this member.
        additional_information:
          type: string
          description: Additional information related to the member.
        assigned_site_names:
          type: string
          description: A list of the names of all sites associated the this member.
        invitable_phone_number:
          type: string
          description:
            A valid mobile phone number that can be used to invite the
            member.
        invited_since:
          type: string
          description: When the member has been invited to Agendrix, in words.
        main_position_id:
          type: string
          description: The unique identifier of the member's main position.
          format: uuid
        main_site_id:
          type: string
          description: The unique identifier of the member's main site.
          format: uuid
        last_invitation_method:
          type: string
          description: The last method used to invite de member, sms or email.
        admin:
          type: boolean
          description: If the member is an administrator of the organization.
        hide_before_seniority_date:
          type: boolean
          description:
            If the member is hidden from the scheduler and timesheets before
            the seniority date.
        messenger_active:
          type: boolean
          description: If the member is currently active on Agendrix's Messenger
        visible:
          type: boolean
          description: If the member is hidden from the scheduler and timesheets.
        is_subordinate:
          type: boolean
          description: If the member is a subordinate to the current user.
        has_unsupervised_sites:
          type: boolean
          description:
            If the member is assigned to sites that aren't supervised by
            the current user.
        override_overtime:
          type: boolean
          description: If the member has custom overtime thresholds.
        overtime_day_threshold:
          type: number
          description: The member's custom day overtime threshold.
          format: float
        overtime_week_threshold:
          type: number
          description: The member's custom week overtime threshold.
          format: float
        comments_count:
          type: integer
          description: The number of comments created by the member.
          format: int32
        shifts_updated_count:
          type: integer
          description: The number of shifts updated by the member.
          format: int32
        seniority_date:
          type: string
          description: When the member first started working for this organization.
          format: date
        deletion_date:
          type: string
          description: When the member will be archived.
          format: date
        invited_at:
          type: string
          description: When the member has been invited.
          format: date-time
        connected_at:
          type: string
          description: When the member accepted the invitation.
          format: date-time
        code:
          type: string
          description: The member's invitation code.
        time_clock_code:
          type: string
          description: The member's time clock code.
        time_clock_override_defaults:
          type: boolean
          description: If the member overrides the organization's time clock settings.
        time_clock_must_be_scheduled:
          type: boolean
          description: If the member must be scheduled in order to clock.
        time_clock_transfer_next_call:
          type: boolean
          description: If the next phone clock must be transfered.
        time_clock_transfer_next_call_number:
          type: string
          description: The number to transfer the next phone clock to.
        time_clock_window:
          type: integer
          description: The window used for various time clock settings, in minutes.
          format: int32
        time_clock_round_to_shift:
          type: boolean
          description:
            If the member's clock in times are rounded to the shift's planned
            start time.
        time_clock_limit_to_shift_end_window:
          type: integer
          description:
            If the member's clock out time is limited to the shift's planned
            end time.
          format: int32
        payroll_seniority:
          type: boolean
          description:
            If the member uses total worked hours instead of date to calculate
            seniority.
        payroll_seniority_hours:
          type: number
          description: The member's total worked hours.
          format: float
        payroll_auto_update:
          type: boolean
          description: If the member doesn't have to clock in.
        updated_at:
          type: string
          description: When the member was last updated.
          format: date-time
        created_at:
          type: string
          description: When the member was created.
          format: date-time
        profile:
          "$ref": "#/components/schemas/Profile"
    Shift:
      type: object
      description: A detailed description of shift.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        start_at:
          type: string
          description: The shift's start date time.
          format: date-time
        start_date:
          type: string
          description: The shift's start date.
          format: date
        end_at:
          type: string
          description: The shift's end date time.
          format: date-time
        end_date:
          type: string
          description: The shift's end date.
          format: date
        date:
          type: string
          description: The shift's date.
          format: date
        paid_break:
          type: integer
          description: The amount of minutes of paid break in this shift.
          format: int32
        unpaid_break:
          type: string
          description: The amount of minutes of unpaid break in this shift.
        status:
          type: string
          description: The shift's status, either draft or published.
        site_id:
          type: string
          description: The unique identifier of the shift's site.
          format: uuid
        member_id:
          type: string
          description: The unique identifier of the shift's member.
          format: uuid
        position_id:
          type: string
          description: The unique identifier of the shift's position.
          format: uuid
        sub_position_id:
          type: string
          description: The unique identifier of the shift's sub-position.
          format: uuid
        member_site_position_id:
          type: string
          description: The unique identifier of the shift's member_site_position.
          format: uuid
        publication_id:
          type: string
          description: The unique identifier of the shift's publication.
          format: uuid
        leave_request_id:
          type: string
          description: The unique identifier of the shift's leave request.
          format: uuid
        leave_type_id:
          type: string
          description: The unique identifier of the shift's leave type.
          format: uuid
        shift_series_id:
          type: string
          description: The unique identifier of the shift's recurrence.
          format: uuid
        updated_by:
          type: string
          description: The unique identifier of the last member who updated this shift.
        open:
          type: boolean
          description: If the shift is open.
        recurring:
          type: boolean
          description: If the shift is recurring.
        time_off:
          type: boolean
          description: If the shift is a time off.
        paid:
          type: boolean
          description: If the shift is a paid time off or not.
        single_clock:
          type: boolean
          description: If the shift only requires a clock in.
        auto_clock:
          type: boolean
          description: If the shift is added automatically to the member's timesheet.
        on_call:
          type: boolean
          description: If the shift is on call.
        all_day:
          type: boolean
          description: If the shift is an all day time off.
        same_date:
          type: boolean
          description: If the start and end of this shift are on the same date.
        hide_end_at:
          type: boolean
          description: If the shift's end is hidden to members.
        confirmed:
          type: boolean
          description: If the shift has been confirmed by its member.
        to_delete:
          type: boolean
          description: If the shift needs to be deleted or not.
        color:
          type: string
          description: The shift's position or sub-position color.
        reminder:
          type: string
          description: The shift's additional information.
        viewed_at:
          type: string
          description: When the shift was seen by its member.
          format: date-time
        confirmed_at:
          type: string
          description: When the shift was confirmed by its member.
          format: date-time
        open_quantity:
          type: integer
          description: How many shifts are available.
          format: int32
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        comments_count:
          type: integer
          description: The number of comments on the shift.
          format: int32
        resources_count:
          type: integer
          description: The number of resources on the shift.
          format: int32
        regular_minutes:
          type: integer
          description: The amount of regular time in the shift, in minutes.
          format: int32
        overtime_minutes:
          type: integer
          description: The amount of overtime in the shift, in minutes.
          format: int32
        premium_minutes:
          type: integer
          description: The amount of premium time added to the shift, in minutes.
          format: int32
        premium_entries_count:
          type: integer
          description: The number of premiums applied to the shift.
          format: int32
        duration:
          type: integer
          description: The shift's total duration.
          format: int32
        rate_base:
          type: number
          description: The rate paid to the member for the regular time.
          format: float
        rate_overtime:
          type: number
          description: The rate paid to the member for the overtime.
          format: float
        resource_ids:
          type: array
          description: The shift's resource ids.
          items:
            type: string
        created_at:
          type: string
          description: When the shift was created.
          format: date-time
        updated_at:
          type: string
          description: When the shift was last updated.
          format: date-time
    LeaveType:
      type: object
      description: A detailed description of leave type.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        name:
          type: string
          description: The leave type's name.
        paid:
          type: boolean
          description: If the leave type is paid.
        created_at:
          type: string
          description: When the leave type was created.
          format: date-time
        updated_at:
          type: string
          description: When the leave type was last updated.
          format: date-time
    LeaveRequest:
      type: object
      description: A detailed description of leave request.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        member_id:
          type: string
          description: The requester's id.
          format: uuid
        member_site_position_id:
          type: string
          description: The requester's site position id.
          format: uuid
        created_by:
          type: string
          description: The leave request creator's id.
          format: uuid
        justification:
          type: string
          description: The leave request justification.
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        paid:
          type: boolean
          description: If the leave request is paid.
        all_day:
          type: boolean
          description: If the leave request is all day.
        multiple_days:
          type: boolean
          description: If the leave request is multiple days.
        overlapping_shifts_count:
          type: integer
          description: How many of the member's shifts overlap with the leave request.
          format: int32
        start_at:
          type: string
          description: The time at which the the leave request starts.
          format: date-time
        start_date:
          type: string
          description: The date at which the the leave request starts.
          format: date
        end_at:
          type: string
          description: The time at which the the leave request ends.
          format: date-time
        end_date:
          type: string
          description: The date at which the the leave request ends.
          format: date
        approved_by:
          type: string
          description: The leave request's approver id.
        declined_by:
          type: string
          description: The leave request's decliner's id.
        canceled_by:
          type: string
          description: The leave request's canceler's id.
        approved_at:
          type: string
          description: The time at which the leave request was approved.
          format: date-time
        declined_at:
          type: string
          description: The time at which the leave request was declined.
          format: date-time
        canceled_at:
          type: string
          description: The time at which the leave request was canceled.
          format: date-time
        expired_at:
          type: string
          description: The time at which the leave request expires.
          format: date-time
        created_at:
          type: string
          description: When the leave request was created.
          format: date-time
        updated_at:
          type: string
          description: When the leave request was last updated.
          format: date-time
        leave_type:
          "$ref": "#/components/schemas/LeaveType"
        resource:
          "$ref": "#/components/schemas/Resource"
        time_off_payment_constraint:
          "$ref": "#/components/schemas/TimeOffPaymentConstraint"
    MemberSitePosition:
      type: object
      description: A detailed description of member site position.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        position_id:
          type: string
          description: The position's unique identifier.
          format: uuid
        rate_base:
          type: number
          description: The member's rate for regular hours in this position.
          format: float
        rate_overtime:
          type: number
          description: The member's rate for overtime hours in this position.
          format: float
        created_at:
          type: string
          description: When the member site's position was created.
          format: date-time
        updated_at:
          type: string
          description: When the member site's position was last updated.
          format: date-time
    MemberSite:
      type: object
      description: A detailed description of member site.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        site_id:
          type: string
          description: The site's unique id
          format: uuid
        role:
          type: string
          description:
            The member's role in this site. Can either be member, supervisor
            or manager.
        supervisor_position_ids:
          type: array
          description: Which position ids in the current site does the member supervise.
          items:
            type: string
        supervisor_resource_ids:
          type: array
          description: Which resource ids in the current site does the member supervise.
          items:
            type: string
        rate_type:
          type: string
          description:
            Whether the same rates are applied to all positions (single)
            or every position has their own rates (position).
        created_at:
          type: string
          description: When the member site was created.
          format: date-time
        updated_at:
          type: string
          description: When the member site was last updated.
          format: date-time
        member_site_positions:
          type: array
          description: The member site's positions.
          items:
            "$ref": "#/components/schemas/MemberSitePosition"
    Session:
      type: object
      description: A detailed description of session.
      properties:
        organization:
          "$ref": "#/components/schemas/Organization"
        user:
          "$ref": "#/components/schemas/User"
        member:
          "$ref": "#/components/schemas/Member"
    BreakCreateAttributes:
      required:
        - length
      type: object
      description: A detailed description of break.
      properties:
        length:
          type: integer
          description: The break length, in minutes.
          format: int32
        offset:
          type: integer
          description:
            The break offset from the shift's start, in minutes. E.g.,
            a break starting at 7:30 on a shift starting at 7:00 will have an offset
            of 30.
          format: int32
        paid:
          type: boolean
          description: If the break is paid or not.
    BreakUpdateAttributes:
      required:
        - id
      type: object
      description: A detailed description of break.
      properties:
        length:
          type: integer
          description: The break length, in minutes.
          format: int32
        offset:
          type: integer
          description:
            The break offset from the shift's start, in minutes. E.g.,
            a break starting at 7:30 on a shift starting at 7:00 will have an offset
            of 30.
          format: int32
        paid:
          type: boolean
          description: If the break is paid or not.
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description:
            Set to true if you want to delete this object while updating
            its parent
    CommentCreate:
      required:
        - body
        - commentable_type
        - commentable_id
      type: object
      description: A detailed description of comment.
      properties:
        body:
          type: string
          description: The comment's body.
        commentable_type:
          type: string
          description:
            The type of the the commented resource - shift, leave request,
            billboard thread, etc.
        commentable_id:
          type: string
          description: The id of the commented resource.
          format: uuid
        type:
          type: string
          description: If the comment is private or not. Must be 'private' or 'public'.
    CommentUpdate:
      type: object
      description: A detailed description of comment.
      properties:
        body:
          type: string
          description: The comment's body.
        commentable_type:
          type: string
          description:
            The type of the the commented resource - shift, leave request,
            billboard thread, etc.
        commentable_id:
          type: string
          description: The id of the commented resource.
          format: uuid
        type:
          type: string
          description: If the comment is private or not. Must be 'private' or 'public'.
    MemberSiteResourceCreateAttributes:
      required:
        - member_site_id
        - resource_id
      type: object
      description: A detailed description of member site resource.
      properties:
        member_site_id:
          type: string
          description: The member_site's unique identifier.
          format: uuid
        resource_id:
          type: string
          description: The resource's unique identifier.
          format: uuid
    MemberSiteResourceUpdateAttributes:
      required:
        - id
      type: object
      description: A detailed description of member site resource.
      properties:
        member_site_id:
          type: string
          description: The member_site's unique identifier.
          format: uuid
        resource_id:
          type: string
          description: The resource's unique identifier.
          format: uuid
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description:
            Set to true if you want to delete this object while updating
            its parent
    Errors:
      type: object
      properties:
        errors:
          type: array
          items:
            "$ref": "#/components/schemas/Error"
    Error:
      type: object
      description: An error object.
      properties:
        source:
          type: string
        short_message:
          type: string
        full_message:
          type: string
    CommonPagination:
      type: object
      description: A pagination object returned on an index request.
      properties:
        sort:
          type: object
        search:
          type: object
        limit:
          type: integer
        page_size:
          type: integer
        total_pages:
          type: integer
        current_page:
          type: integer
        next_page:
          type: integer
        prev_page:
          type: integer
        first_page:
          type: boolean
        last_page:
          type: boolean
        out_of_range:
          type: boolean
        total_count:
          type: integer
    PayrollUpdate:
      type: object
      description: A detailed description of payroll.
      properties:
        status:
          type: string
          description: The payroll's current status.
    PhoneTerminalCreateAttributes:
      required:
        - name
        - phone_number
        - confidential
      type: object
      description: A detailed description of phone terminal.
      properties:
        site_id:
          type: string
          description: The unique identifier of the phone terminal's site.
          format: uuid
        name:
          type: string
          description: The phone terminal's name.
        phone_number:
          type: string
          description: The phone terminal's phone number.
        confidential:
          type: boolean
          description:
            If the phone terminal allows phone calls from confidential
            phone numbers.
    PhoneTerminalUpdateAttributes:
      required:
        - id
      type: object
      description: A detailed description of phone terminal.
      properties:
        site_id:
          type: string
          description: The unique identifier of the phone terminal's site.
          format: uuid
        name:
          type: string
          description: The phone terminal's name.
        phone_number:
          type: string
          description: The phone terminal's phone number.
        confidential:
          type: boolean
          description:
            If the phone terminal allows phone calls from confidential
            phone numbers.
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description:
            Set to true if you want to delete this object while updating
            its parent
    LeaveValueSettingCreateAttributes:
      required:
        - interval_start
        - interval_end
        - worked_days_type
      type: object
      description: A detailed description of leave value setting.
      properties:
        interval_start:
          type: string
          description:
            Start date of the interval used to calculate the time off's
            value.
          format: date
        interval_end:
          type: string
          description: End date of the interval used to calculate the time off's value.
          format: date
        worked_days_type:
          type: string
          description:
            Whether the hours worked during the interval are divided by
            the number of days worked (variable) or by a specific amount (fixed).
        worked_days_count:
          type: integer
          description: The number by which the total is divided if the type is fixed.
          format: int32
    LeaveValueSettingUpdateAttributes:
      required:
        - interval_start
        - interval_end
        - worked_days_type
      type: object
      description: A detailed description of leave value setting.
      properties:
        interval_start:
          type: string
          description:
            Start date of the interval used to calculate the time off's
            value.
          format: date
        interval_end:
          type: string
          description: End date of the interval used to calculate the time off's value.
          format: date
        worked_days_type:
          type: string
          description:
            Whether the hours worked during the interval are divided by
            the number of days worked (variable) or by a specific amount (fixed).
        worked_days_count:
          type: integer
          description: The number by which the total is divided if the type is fixed.
          format: int32
    LocationCreateAttributes:
      required:
        - longitude
        - latitude
      type: object
      description: A detailed description of location.
      properties:
        latitude:
          type: number
          description: The location's latitude.
          format: float
        longitude:
          type: number
          description: The location's longitude.
          format: float
    ResourceCreate:
      required:
        - name
      type: object
      description: A detailed description of resource.
      properties:
        "no":
          type: string
          description: The resource's unique short identifier.
        name:
          type: string
          description: The resource's name.
        address:
          type: string
          description: The resource's address.
        description:
          type: string
          description: The resource's description.
        exclusive:
          type: boolean
          description: If the resource is exclusive.
        type_job_site:
          type: boolean
          description: If the resource is a job site.
        type_equipment:
          type: boolean
          description: If the resource is an equipment.
        week_hours_min:
          type: number
          description: The minimum scheduling goals for this resource.
          format: float
        week_hours_max:
          type: number
          description: The maximum scheduling goals for this resource.
          format: float
        minimum_paid_minutes_per_entry:
          type: integer
          description: The minimum amount of paid minutes per entry on the resource.
          format: int32
        document_ids:
          type: array
          description: The documents attached to this resource.
          items:
            type: string
        location_attributes:
          "$ref": "#/components/schemas/LocationCreateAttributes"
        phone_terminals_attributes:
          type: array
          description: The resource's phone terminals.
          items:
            "$ref": "#/components/schemas/PhoneTerminalCreateAttributes"
    LocationUpdateAttributes:
      required:
        - id
      type: object
      description: A detailed description of location.
      properties:
        latitude:
          type: number
          description: The location's latitude.
          format: float
        longitude:
          type: number
          description: The location's longitude.
          format: float
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description:
            Set to true if you want to delete this object while updating
            its parent
    ResourceUpdate:
      type: object
      description: A detailed description of resource.
      properties:
        "no":
          type: string
          description: The resource's unique short identifier.
        name:
          type: string
          description: The resource's name.
        address:
          type: string
          description: The resource's address.
        description:
          type: string
          description: The resource's description.
        exclusive:
          type: boolean
          description: If the resource is exclusive.
        type_job_site:
          type: boolean
          description: If the resource is a job site.
        type_equipment:
          type: boolean
          description: If the resource is an equipment.
        week_hours_min:
          type: number
          description: The minimum scheduling goals for this resource.
          format: float
        week_hours_max:
          type: number
          description: The maximum scheduling goals for this resource.
          format: float
        minimum_paid_minutes_per_entry:
          type: integer
          description: The minimum amount of paid minutes per entry on the resource.
          format: int32
        document_ids:
          type: array
          description: The documents attached to this resource.
          items:
            type: string
        location_attributes:
          "$ref": "#/components/schemas/LocationUpdateAttributes"
        phone_terminals_attributes:
          type: array
          description: The resource's phone terminals.
          items:
            oneOf:
              - "$ref": "#/components/schemas/PhoneTerminalUpdateAttributes"
              - "$ref": "#/components/schemas/PhoneTerminalCreateAttributes"
    BillboardTagCreate:
      required:
        - name
      type: object
      description: A detailed description of billboard tag.
      properties:
        name:
          type: string
          description: The tag's name.
    BillboardTagUpdate:
      required:
        - name
      type: object
      description: A detailed description of billboard tag.
      properties:
        name:
          type: string
          description: The tag's name.
    TimeOffPaymentConstraintCreateAttributes:
      required:
        - paid_weekdays
      type: object
      description:
        The time off's constraints. (Which days of the week are considered
        paid for the time off.)
      properties:
        paid_weekdays:
          type: array
          description: |-
            The days of the week that are considered paid for the time off, with 0 as monday, up to 6 as sunday.
                               Only one occurance of each day can be specified.
          items:
            type: integer
            format: int32
    TimeOffPaymentConstraintUpdateAttributes:
      required:
        - id
        - paid_weekdays
      type: object
      description:
        The time off's constraints. (Which days of the week are considered
        paid for the time off.)
      properties:
        paid_weekdays:
          type: array
          description: |-
            The days of the week that are considered paid for the time off, with 0 as monday, up to 6 as sunday.
                               Only one occurance of each day can be specified.
          items:
            type: integer
            format: int32
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
    SchedulerProjectionCreate:
      required:
        - site_id
        - date
      type: object
      description: A detailed description of scheduler projection.
      properties:
        revenues:
          type: number
          description: The amount of expected revenues.
          format: float
        hours:
          type: number
          description: The number of expected scheduled hours.
          format: float
        site_id:
          type: string
          description: The unique identifier of the scheduler projection's site.
          format: uuid
        date:
          type: string
          description: The scheduler projection's date.
          format: date
    SchedulerProjectionUpdateForBulk:
      required:
        - site_id
        - date
      type: object
      description: A detailed description of scheduler projection.
      properties:
        revenues:
          type: number
          description: The amount of expected revenues.
          format: float
        hours:
          type: number
          description: The number of expected scheduled hours.
          format: float
        site_id:
          type: string
          description: The unique identifier of the scheduler projection's site.
          format: uuid
        date:
          type: string
          description: The scheduler projection's date.
          format: date
    SchedulerProjectionUpdate:
      type: object
      description: A detailed description of scheduler projection.
      properties:
        revenues:
          type: number
          description: The amount of expected revenues.
          format: float
        hours:
          type: number
          description: The number of expected scheduled hours.
          format: float
    SiteCreate:
      required:
        - name
      type: object
      description: A detailed description of site.
      properties:
        name:
          type: string
          description: The site's name.
        address:
          type: string
          description: The site's address.
        instructions:
          type: string
          description: The site's additional information.
        location_attributes:
          "$ref": "#/components/schemas/LocationCreateAttributes"
    SiteUpdate:
      type: object
      description: A detailed description of site.
      properties:
        name:
          type: string
          description: The site's name.
        address:
          type: string
          description: The site's address.
        instructions:
          type: string
          description: The site's additional information.
        location_attributes:
          "$ref": "#/components/schemas/LocationUpdateAttributes"
    BillboardThreadStats:
      type: object
      description: A detailed description of billboard thread stats.
      properties:
        confirmed_count:
          type: integer
          description: The number of acknowledgements.
          format: int32
        percent_confirmed:
          type: number
          description: The percentage of acknowledgements out of all concerned members.
          format: float
        views_count:
          type: integer
          description: The number of views.
          format: int32
        percent_views:
          type: number
          description: The percentage of views out of all concerned members.
          format: float
    BillboardThread:
      type: object
      description: A detailed description of billboard thread.
      properties:
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        created_by:
          type: string
          description: The unique identifier of the member who created the thread.
          format: uuid
        updated_by:
          type: string
          description: The unique identifier of the last member who updated the thread.
          format: uuid
        title:
          type: string
          description: The thread's title.
        content:
          type: string
          description: The thread's full content.
        content_excerpt:
          type: string
          description: And excerpt of the thread's full content (around 20 words).
        billboard_views_count:
          type: integer
          description: The number of times the thread has been viewed.
          format: int32
        billboard_acknowledged_count:
          type: integer
          description: The number of times the thread has been acknowledged.
          format: int32
        comments_count:
          type: integer
          description: The number of comments on the thread.
          format: int32
        start_date:
          type: string
          description: The thread's publication date.
          format: date
        end_date:
          type: string
          description: When the thread will be automatically archived.
          format: date
        start_time:
          type: string
          description: The thread's publication time.
        organization_wide:
          type: boolean
          description:
            If the thread is accessible to all the organization's members.
            False if the thread is scoped to specific sites or positions.
        commentable:
          type: boolean
          description: If the thread is commentable.
        acknowledgeable:
          type: boolean
          description: If the thread must be acknowledged by its concerned members.
        draft:
          type: boolean
          description: If the thread is a draft.
        sticky:
          type: boolean
          description: If the thread is sticky.
        unread:
          type: boolean
          description: If the thread is unread by the current member.
        unconfirmed:
          type: boolean
          description: If the thread hasn't been acknowledged by the current member.
        excerpted:
          type: boolean
          description:
            If the thread has an excerpt (if the content has more than
            20 words).
        can_acknowledge:
          type: boolean
          description:
            If the current member has to acknowledge the thread. False
            if the current member is not concerned by the thread or has already acknowledged
            it.
        can_edit:
          type: boolean
          description:
            If the current member has the necessary rights to edit this
            thread.
        archived_at:
          type: string
          description: The moment the thread has been archived.
          format: date-time
        acknowledged_at:
          type: string
          description:
            The last time the thread has been acknowledged by the current
            member.
          format: date-time
        updated_at:
          type: string
          description: When the thread was last updated.
          format: date-time
        created_at:
          type: string
          description: When the thread was created.
          format: date-time
        stats:
          "$ref": "#/components/schemas/BillboardThreadStats"
    BillboardThreadTagCreateAttributes:
      required:
        - billboard_tag_id
      type: object
      description: A detailed description of billboard thread tag.
      properties:
        billboard_tag_id:
          type: string
          description: The tag's unique identifier.
          format: uuid
    BillboardThreadCreate:
      required:
        - title
        - content
        - start_date
      type: object
      description: A detailed description of billboard thread.
      properties:
        title:
          type: string
          description: The thread's title.
        content:
          type: string
          description: The thread's full content.
        start_date:
          type: string
          description: The thread's publication date.
          format: date
        end_date:
          type: string
          description: When the thread will be automatically archived.
          format: date
        start_time:
          type: string
          description: The thread's publication time.
        archived_at:
          type: string
          description: The moment the thread has been archived.
          format: date-time
        draft:
          type: boolean
          description: If the thread is a draft.
        notify:
          type: boolean
          description: If the action notifies the organization's members.
        sticky:
          type: boolean
          description: If the thread is sticky.
        commentable:
          type: boolean
          description: If the thread is commentable.
        acknowledgeable:
          type: boolean
          description: If the thread must be acknowledged by its concerned members.
        site_ids:
          type: array
          description: The site ids for which the thread is visible.
          items:
            type: string
        position_ids:
          type: array
          description: The position ids for which the thread is visible.
          items:
            type: string
        document_ids:
          type: array
          description: The documents attached to the thread.
          items:
            type: string
        billboard_thread_tags_attributes:
          type: array
          description: An array of billboard thread tags
          items:
            "$ref": "#/components/schemas/BillboardThreadTagCreateAttributes"
    BillboardThreadTagUpdateAttributes:
      required:
        - id
      type: object
      description: A detailed description of billboard thread tag.
      properties:
        billboard_tag_id:
          type: string
          description: The tag's unique identifier.
          format: uuid
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description:
            Set to true if you want to delete this object while updating
            its parent
    BillboardThreadUpdate:
      type: object
      description: A detailed description of billboard thread.
      properties:
        title:
          type: string
          description: The thread's title.
        content:
          type: string
          description: The thread's full content.
        start_date:
          type: string
          description: The thread's publication date.
          format: date
        end_date:
          type: string
          description: When the thread will be automatically archived.
          format: date
        start_time:
          type: string
          description: The thread's publication time.
        archived_at:
          type: string
          description: The moment the thread has been archived.
          format: date-time
        draft:
          type: boolean
          description: If the thread is a draft.
        notify:
          type: boolean
          description: If the action notifies the organization's members.
        sticky:
          type: boolean
          description: If the thread is sticky.
        commentable:
          type: boolean
          description: If the thread is commentable.
        acknowledgeable:
          type: boolean
          description: If the thread must be acknowledged by its concerned members.
        site_ids:
          type: array
          description: The site ids for which the thread is visible.
          items:
            type: string
        position_ids:
          type: array
          description: The position ids for which the thread is visible.
          items:
            type: string
        document_ids:
          type: array
          description: The documents attached to the thread.
          items:
            type: string
        billboard_thread_tags_attributes:
          type: array
          description: An array of billboard thread tags
          items:
            oneOf:
              - "$ref": "#/components/schemas/BillboardThreadTagUpdateAttributes"
              - "$ref": "#/components/schemas/BillboardThreadTagCreateAttributes"
    ResourceShiftCreateAttributes:
      required:
        - resource_id
      type: object
      description: A detailed description of resource shift.
      properties:
        resource_id:
          type: string
          description: The resource's unique identifier.
          format: uuid
    ResourceShiftUpdateAttributes:
      required:
        - id
      type: object
      description: A detailed description of resource shift.
      properties:
        resource_id:
          type: string
          description: The resource's unique identifier.
          format: uuid
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description:
            Set to true if you want to delete this object while updating
            its parent
    ProfileUpdateAttributes:
      type: object
      description: A detailed description of profile.
      properties:
        email:
          type: string
          description: The profile's email.
          format: email
        first_name:
          type: string
          description: The profile's first name.
        last_name:
          type: string
          description: The profile's last name.
        birthdate:
          type: string
          description: The profile's birthdate.
          format: date
        civic_address:
          type: string
          description: The profile's civic address.
        document_id:
          type: string
          description: The unique identifier of the profile's picture.
        phone_1_number:
          type: string
          description: The profile's first phone number.
          format: phone
        phone_2_number:
          type: string
          description: The profile's second phone number.
          format: phone
        phone_3_number:
          type: string
          description: The profile's third phone number.
          format: phone
        phone_1_type:
          type: string
          description: The profile's first phone type.
        phone_2_type:
          type: string
          description: The profile's second phone type.
        phone_3_type:
          type: string
          description: The profile's third phone type.
    UserUpdate:
      type: object
      description: A detailed description of user.
      properties:
        locale:
          type: string
          description: The user's language.
        time_format:
          type: integer
          description: The user's time format, 12 or 24.
          format: int32
        time_zone_name:
          type: string
          description: The user's timezone name.
        email:
          type: string
          description: The user's email.
          format: email
        disabled_notifications:
          type: array
          description: A list of the notifications this user has disabled.
          items:
            type: string
        sms_notifications:
          type: boolean
          description: If the user receives SMS notifications.
        sms_notifications_phone_status:
          type: string
          description: If the phone number's confirmation status, pending or confirmed.
        sms_notifications_phone_number:
          type: string
          description: The phone number at which the user receives the sms notifications
        email_notifications:
          type: boolean
          description: If the user receives email notifications.
        shift_reminder_time:
          type: integer
          description: When the user is reminded of an upcoming shift, in minutes.
          format: int32
        profile_attributes:
          "$ref": "#/components/schemas/ProfileUpdateAttributes"
    TimeEntryCreate:
      required:
        - member_id
        - position_id
        - site_id
        - start_at
      type: object
      description: A detailed description of time entry.
      properties:
        start_at:
          type: string
          description: The date time at which the time entry starts.
          format: date-time
        end_at:
          type: string
          description: The date time at which the time entry ends.
          format: date-time
        start_at_time:
          type: string
          description: The time at which the time entry starts.
        end_at_time:
          type: string
          description: The time at which the time entry ends.
        overwritten_length_minutes:
          type: integer
          description: The time entry's custom length.
          format: int32
        date:
          type: string
          description: The time entry's date.
          format: date
        time_off:
          type: boolean
          description: If the time entry is a time off.
        time_off_length:
          type: integer
          description: The length of the time off.
          format: int32
        time_off_leave_type_id:
          type: string
          description: The unique identifier of the leave type.
          format: uuid
        time_off_paid:
          type: boolean
          description: If the time off is paid.
        time_off_resource_id:
          type: string
          description: The unique identifier of the time off's resource.
          format: uuid
        unpaid_break:
          type: integer
          description: Unpaid break minutes for the time entry.
          format: int32
        paid_break:
          type: integer
          description: Paid break minutes for the time entry.
          format: int32
        member_site_position_id:
          type: string
          description: The time entry's member site position id.
          format: uuid
        site_id:
          type: string
          description: The time entry's site id.
          format: uuid
        position_id:
          type: string
          description: The time entry's position id.
          format: uuid
        notes:
          type: string
          description: The time entry notes.
        start_at_clock_notes:
          type: string
          description: Note left by the employee while clocking in.
        end_at_clock_notes:
          type: string
          description: Note left by the employee while clocking out.
        start_at_clock_job_site_id:
          type: string
          description:
            The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        end_at_clock_job_site_id:
          type: string
          description:
            The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        rate_regular:
          type: number
          description: The regular rate for the time entry.
          format: float
        rate_overtime:
          type: number
          description: The overtime rate for the time entry.
          format: float
        break_started_at:
          type: string
          description: The date time at which the time entry break started.
          format: date-time
        member_id:
          type: string
          description: The time entry's member id.
          format: uuid
    TimeEntryUpdate:
      type: object
      description: A detailed description of time entry.
      properties:
        start_at:
          type: string
          description: The date time at which the time entry starts.
          format: date-time
        end_at:
          type: string
          description: The date time at which the time entry ends.
          format: date-time
        start_at_time:
          type: string
          description: The time at which the time entry starts.
        end_at_time:
          type: string
          description: The time at which the time entry ends.
        overwritten_length_minutes:
          type: integer
          description: The time entry's custom length.
          format: int32
        date:
          type: string
          description: The time entry's date.
          format: date
        time_off:
          type: boolean
          description: If the time entry is a time off.
        time_off_length:
          type: integer
          description: The length of the time off.
          format: int32
        time_off_leave_type_id:
          type: string
          description: The unique identifier of the leave type.
          format: uuid
        time_off_paid:
          type: boolean
          description: If the time off is paid.
        time_off_resource_id:
          type: string
          description: The unique identifier of the time off's resource.
          format: uuid
        unpaid_break:
          type: integer
          description: Unpaid break minutes for the time entry.
          format: int32
        paid_break:
          type: integer
          description: Paid break minutes for the time entry.
          format: int32
        member_site_position_id:
          type: string
          description: The time entry's member site position id.
          format: uuid
        site_id:
          type: string
          description: The time entry's site id.
          format: uuid
        position_id:
          type: string
          description: The time entry's position id.
          format: uuid
        notes:
          type: string
          description: The time entry notes.
        start_at_clock_notes:
          type: string
          description: Note left by the employee while clocking in.
        end_at_clock_notes:
          type: string
          description: Note left by the employee while clocking out.
        start_at_clock_job_site_id:
          type: string
          description:
            The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        end_at_clock_job_site_id:
          type: string
          description:
            The unique identifier of the job site where the employee clocked
            in.
          format: uuid
        rate_regular:
          type: number
          description: The regular rate for the time entry.
          format: float
        rate_overtime:
          type: number
          description: The overtime rate for the time entry.
          format: float
        break_started_at:
          type: string
          description: The date time at which the time entry break started.
          format: date-time
    PositionCreate:
      required:
        - name
      type: object
      description: A detailed description of position.
      properties:
        name:
          type: string
          description: The position's name.
        rank:
          type: integer
          description: The position's rank.
          format: int32
        color:
          type: string
          description: The position's color.
        parent_id:
          type: string
          description:
            The unique identifier of the position's parent. If this is
            present, it means this is a sub-position.
    PositionUpdate:
      type: object
      description: A detailed description of position.
      properties:
        name:
          type: string
          description: The position's name.
        rank:
          type: integer
          description: The position's rank.
          format: int32
        color:
          type: string
          description: The position's color.
        parent_id:
          type: string
          description:
            The unique identifier of the position's parent. If this is
            present, it means this is a sub-position.
    PremiumEntryCreateAttributes:
      required:
        - premium_id
      type: object
      description: A detailed description of premium entry.
      properties:
        premium_id:
          type: string
          description: The premium's unique identifier.
          format: uuid
        has_custom_value:
          type: boolean
          description:
            If the premium is applied to a specific amount of hours, otherwise
            it is applied to the shift's length.
        entry_minutes:
          type: integer
          description: The number of minutes the premium is applied to.
          format: int32
    PremiumEntryUpdateAttributes:
      required:
        - id
      type: object
      description: A detailed description of premium entry.
      properties:
        premium_id:
          type: string
          description: The premium's unique identifier.
          format: uuid
        has_custom_value:
          type: boolean
          description:
            If the premium is applied to a specific amount of hours, otherwise
            it is applied to the shift's length.
        entry_minutes:
          type: integer
          description: The number of minutes the premium is applied to.
          format: int32
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description:
            Set to true if you want to delete this object while updating
            its parent
    MemberSitePositionCreateAttributes:
      required:
        - member_site_id
        - position_id
      type: object
      description: A detailed description of member site position.
      properties:
        member_site_id:
          type: string
          description: The member_site's unique identifier.
          format: uuid
        position_id:
          type: string
          description: The position's unique identifier.
          format: uuid
        rate_base:
          type: number
          description: The member's rate for regular hours in this position.
          format: float
        rate_overtime:
          type: number
          description: The member's rate for overtime hours in this position.
          format: float
    MemberSiteCreateAttributes:
      required:
        - site_id
        - role
      type: object
      description: A detailed description of member site.
      properties:
        site_id:
          type: string
          description: The site's unique id
          format: uuid
        role:
          type: string
          description:
            The member's role in this site. Can either be member, supervisor
            or manager.
        rate_single_base:
          type: integer
          description:
            The member's rate for regular hours for all positions in this
            site.
          format: int32
        rate_single_overtime:
          type: integer
          description:
            The member's rate for overtime hours for all positions in this
            site.
          format: int32
        rate_type:
          type: string
          description:
            Whether the same rates are applied to all positions (single)
            or every position has their own rates (position).
        member_site_positions_attributes:
          type: array
          description: The positions associated to this member in this site
          items:
            "$ref": "#/components/schemas/MemberSitePositionCreateAttributes"
        member_site_resources_attributes:
          type: array
          description: The resources associated to this member in this site
          items:
            "$ref": "#/components/schemas/MemberSiteResourceCreateAttributes"
    ProfileCreateAttributes:
      required:
        - first_name
        - last_name
        - email
      type: object
      description: A detailed description of profile.
      properties:
        email:
          type: string
          description: The profile's email.
          format: email
        first_name:
          type: string
          description: The profile's first name.
        last_name:
          type: string
          description: The profile's last name.
        birthdate:
          type: string
          description: The profile's birthdate.
          format: date
        civic_address:
          type: string
          description: The profile's civic address.
        document_id:
          type: string
          description: The unique identifier of the profile's picture.
        phone_1_number:
          type: string
          description: The profile's first phone number.
          format: phone
        phone_2_number:
          type: string
          description: The profile's second phone number.
          format: phone
        phone_3_number:
          type: string
          description: The profile's third phone number.
          format: phone
        phone_1_type:
          type: string
          description: The profile's first phone type.
        phone_2_type:
          type: string
          description: The profile's second phone type.
        phone_3_type:
          type: string
          description: The profile's third phone type.
    MemberCreate:
      required:
        - profile_attributes
        - member_sites_attributes
      type: object
      description: A detailed description of member.
      properties:
        seniority_date:
          type: string
          description: When the member first started working for this organization.
          format: date
        deletion_date:
          type: string
          description: When the member will be archived.
          format: date
        identification_number:
          type: string
          description: The member's identification number.
        additional_information:
          type: string
          description: Additional information related to the member.
        override_overtime:
          type: boolean
          description: If the member has custom overtime thresholds.
        override_spread_overtime:
          type: boolean
          description:
            If the member overrides the organization's overtime spread
            setting.
        overtime_day_threshold:
          type: number
          description: The member's custom day overtime threshold.
          format: float
        overtime_week_threshold:
          type: number
          description: The member's custom week overtime threshold.
          format: float
        spread_overtime_enabled:
          type: boolean
          description: If the overtime is spread across multiple weeks for this member.
        main_position_id:
          type: string
          description: The unique identifier of the member's main position.
          format: uuid
        main_site_id:
          type: string
          description: The unique identifier of the member's main site.
          format: uuid
        admin:
          type: boolean
          description: If the member is an administrator of the organization.
        invite:
          type: boolean
          description: If this member is been invited to join the organization.
        visible:
          type: boolean
          description: If the member is hidden from the scheduler and timesheets.
        hide_before_seniority_date:
          type: boolean
          description:
            If the member is hidden from the scheduler and timesheets before
            the seniority date.
        time_clock_code:
          type: string
          description: The member's time clock code.
        time_clock_override_defaults:
          type: boolean
          description: If the member overrides the organization's time clock settings.
        time_clock_transfer_next_call:
          type: boolean
          description: If the next phone clock must be transfered.
        time_clock_transfer_next_call_number:
          type: string
          description: The number to transfer the next phone clock to.
        time_clock_must_be_scheduled:
          type: boolean
          description: If the member must be scheduled in order to clock.
        time_clock_window:
          type: integer
          description: The window used for various time clock settings, in minutes.
          format: int32
        time_clock_round_to_shift:
          type: boolean
          description:
            If the member's clock in times are rounded to the shift's planned
            start time.
        time_clock_limit_to_shift_end_window:
          type: integer
          description:
            If the member's clock out time is limited to the shift's planned
            end time.
          format: int32
        payroll_seniority:
          type: boolean
          description:
            If the member uses total worked hours instead of date to calculate
            seniority.
        payroll_auto_update:
          type: boolean
          description: If the member doesn't have to clock in.
        member_sites_attributes:
          type: array
          description: The member's sites.
          items:
            "$ref": "#/components/schemas/MemberSiteCreateAttributes"
        profile_attributes:
          "$ref": "#/components/schemas/ProfileCreateAttributes"
    MemberSitePositionUpdateAttributes:
      required:
        - id
      type: object
      description: A detailed description of member site position.
      properties:
        member_site_id:
          type: string
          description: The member_site's unique identifier.
          format: uuid
        position_id:
          type: string
          description: The position's unique identifier.
          format: uuid
        rate_base:
          type: number
          description: The member's rate for regular hours in this position.
          format: float
        rate_overtime:
          type: number
          description: The member's rate for overtime hours in this position.
          format: float
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description:
            Set to true if you want to delete this object while updating
            its parent
    MemberSiteUpdateAttributes:
      required:
        - id
      type: object
      description: A detailed description of member site.
      properties:
        site_id:
          type: string
          description: The site's unique id
          format: uuid
        role:
          type: string
          description:
            The member's role in this site. Can either be member, supervisor
            or manager.
        rate_single_base:
          type: integer
          description:
            The member's rate for regular hours for all positions in this
            site.
          format: int32
        rate_single_overtime:
          type: integer
          description:
            The member's rate for overtime hours for all positions in this
            site.
          format: int32
        rate_type:
          type: string
          description:
            Whether the same rates are applied to all positions (single)
            or every position has their own rates (position).
        member_site_positions_attributes:
          type: array
          description: The positions associated to this member in this site
          items:
            oneOf:
              - "$ref": "#/components/schemas/MemberSitePositionUpdateAttributes"
              - "$ref": "#/components/schemas/MemberSitePositionCreateAttributes"
        member_site_resources_attributes:
          type: array
          description: The resources associated to this member in this site
          items:
            oneOf:
              - "$ref": "#/components/schemas/MemberSiteResourceUpdateAttributes"
              - "$ref": "#/components/schemas/MemberSiteResourceCreateAttributes"
        id:
          type: string
          description: Unique identifier for the object.
          format: uuid
        _destroy:
          type: boolean
          description:
            Set to true if you want to delete this object while updating
            its parent
    MemberUpdate:
      type: object
      description: A detailed description of member.
      properties:
        seniority_date:
          type: string
          description: When the member first started working for this organization.
          format: date
        deletion_date:
          type: string
          description: When the member will be archived.
          format: date
        identification_number:
          type: string
          description: The member's identification number.
        additional_information:
          type: string
          description: Additional information related to the member.
        override_overtime:
          type: boolean
          description: If the member has custom overtime thresholds.
        override_spread_overtime:
          type: boolean
          description:
            If the member overrides the organization's overtime spread
            setting.
        overtime_day_threshold:
          type: number
          description: The member's custom day overtime threshold.
          format: float
        overtime_week_threshold:
          type: number
          description: The member's custom week overtime threshold.
          format: float
        spread_overtime_enabled:
          type: boolean
          description: If the overtime is spread across multiple weeks for this member.
        main_position_id:
          type: string
          description: The unique identifier of the member's main position.
          format: uuid
        main_site_id:
          type: string
          description: The unique identifier of the member's main site.
          format: uuid
        admin:
          type: boolean
          description: If the member is an administrator of the organization.
        invite:
          type: boolean
          description: If this member is been invited to join the organization.
        visible:
          type: boolean
          description: If the member is hidden from the scheduler and timesheets.
        hide_before_seniority_date:
          type: boolean
          description:
            If the member is hidden from the scheduler and timesheets before
            the seniority date.
        time_clock_code:
          type: string
          description: The member's time clock code.
        time_clock_override_defaults:
          type: boolean
          description: If the member overrides the organization's time clock settings.
        time_clock_transfer_next_call:
          type: boolean
          description: If the next phone clock must be transfered.
        time_clock_transfer_next_call_number:
          type: string
          description: The number to transfer the next phone clock to.
        time_clock_must_be_scheduled:
          type: boolean
          description: If the member must be scheduled in order to clock.
        time_clock_window:
          type: integer
          description: The window used for various time clock settings, in minutes.
          format: int32
        time_clock_round_to_shift:
          type: boolean
          description:
            If the member's clock in times are rounded to the shift's planned
            start time.
        time_clock_limit_to_shift_end_window:
          type: integer
          description:
            If the member's clock out time is limited to the shift's planned
            end time.
          format: int32
        payroll_seniority:
          type: boolean
          description:
            If the member uses total worked hours instead of date to calculate
            seniority.
        payroll_auto_update:
          type: boolean
          description: If the member doesn't have to clock in.
        member_sites_attributes:
          type: array
          description: The member's sites.
          items:
            oneOf:
              - "$ref": "#/components/schemas/MemberSiteUpdateAttributes"
              - "$ref": "#/components/schemas/MemberSiteCreateAttributes"
        profile_attributes:
          "$ref": "#/components/schemas/ProfileUpdateAttributes"
    ShiftCreate:
      required:
        - site_id
        - position_id
        - start_at
        - end_at
      type: object
      description: A detailed description of shift.
      properties:
        site_id:
          type: string
          description: The unique identifier of the shift's site.
          format: uuid
        position_id:
          type: string
          description: The unique identifier of the shift's position.
          format: uuid
        sub_position_id:
          type: string
          description: The unique identifier of the shift's sub-position.
          format: uuid
        date:
          type: string
          description: The shift's date.
          format: date
        start_at:
          type: string
          description: The shift's start date time.
          format: date-time
        start_at_time:
          type: string
          description: The shift's start time.
        start_date:
          type: string
          description: The shift's start date.
          format: date
        end_at:
          type: string
          description: The shift's end date time.
          format: date-time
        end_at_time:
          type: string
          description: The shift's end time.
        end_date:
          type: string
          description: The shift's end date.
          format: date
        on_call:
          type: boolean
          description: If the shift is on call.
        time_off:
          type: boolean
          description: If the shift is a time off.
        all_day:
          type: boolean
          description: If the shift is an all day time off.
        single_clock:
          type: boolean
          description: If the shift only requires a clock in.
        auto_clock:
          type: boolean
          description: If the shift is added automatically to the member's timesheet.
        hide_end_at:
          type: boolean
          description: If the shift's end is hidden to members.
        paid:
          type: boolean
          description: If the shift is a paid time off or not.
        recurring:
          type: boolean
          description: If the shift is recurring.
        open:
          type: boolean
          description: If the shift is open.
        open_quantity:
          type: integer
          description: How many shifts are available.
          format: int32
        leave_type_id:
          type: string
          description: The unique identifier of the shift's leave type.
          format: uuid
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        reminder:
          type: string
          description: The shift's additional information.
        resource_shifts_attributes:
          type: array
          description: The shift's resources.
          items:
            "$ref": "#/components/schemas/ResourceShiftCreateAttributes"
        breaks_attributes:
          type: array
          description: The shift's breaks.
          items:
            "$ref": "#/components/schemas/BreakCreateAttributes"
        time_off_payment_constraint_attributes:
          "$ref": "#/components/schemas/TimeOffPaymentConstraintCreateAttributes"
        leave_value_setting_attributes:
          "$ref": "#/components/schemas/LeaveValueSettingCreateAttributes"
        manual_premium_entries:
          type: array
          description: The shift's manual premiums.
          items:
            "$ref": "#/components/schemas/PremiumEntryCreateAttributes"
        member_id:
          type: string
          description: The unique identifier of the shift's member.
          format: uuid
    ShiftUpdate:
      type: object
      description: A detailed description of shift.
      properties:
        site_id:
          type: string
          description: The unique identifier of the shift's site.
          format: uuid
        position_id:
          type: string
          description: The unique identifier of the shift's position.
          format: uuid
        sub_position_id:
          type: string
          description: The unique identifier of the shift's sub-position.
          format: uuid
        date:
          type: string
          description: The shift's date.
          format: date
        start_at:
          type: string
          description: The shift's start date time.
          format: date-time
        start_at_time:
          type: string
          description: The shift's start time.
        start_date:
          type: string
          description: The shift's start date.
          format: date
        end_at:
          type: string
          description: The shift's end date time.
          format: date-time
        end_at_time:
          type: string
          description: The shift's end time.
        end_date:
          type: string
          description: The shift's end date.
          format: date
        on_call:
          type: boolean
          description: If the shift is on call.
        time_off:
          type: boolean
          description: If the shift is a time off.
        all_day:
          type: boolean
          description: If the shift is an all day time off.
        single_clock:
          type: boolean
          description: If the shift only requires a clock in.
        auto_clock:
          type: boolean
          description: If the shift is added automatically to the member's timesheet.
        hide_end_at:
          type: boolean
          description: If the shift's end is hidden to members.
        paid:
          type: boolean
          description: If the shift is a paid time off or not.
        recurring:
          type: boolean
          description: If the shift is recurring.
        open:
          type: boolean
          description: If the shift is open.
        open_quantity:
          type: integer
          description: How many shifts are available.
          format: int32
        leave_type_id:
          type: string
          description: The unique identifier of the shift's leave type.
          format: uuid
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        reminder:
          type: string
          description: The shift's additional information.
        resource_shifts_attributes:
          type: array
          description: The shift's resources.
          items:
            oneOf:
              - "$ref": "#/components/schemas/ResourceShiftUpdateAttributes"
              - "$ref": "#/components/schemas/ResourceShiftCreateAttributes"
        breaks_attributes:
          type: array
          description: The shift's breaks.
          items:
            oneOf:
              - "$ref": "#/components/schemas/BreakUpdateAttributes"
              - "$ref": "#/components/schemas/BreakCreateAttributes"
        time_off_payment_constraint_attributes:
          "$ref": "#/components/schemas/TimeOffPaymentConstraintUpdateAttributes"
        leave_value_setting_attributes:
          "$ref": "#/components/schemas/LeaveValueSettingUpdateAttributes"
        manual_premium_entries:
          type: array
          description: The shift's manual premiums.
          items:
            oneOf:
              - "$ref": "#/components/schemas/PremiumEntryUpdateAttributes"
              - "$ref": "#/components/schemas/PremiumEntryCreateAttributes"
    LeaveRequestCreate:
      required:
        - member_id
        - justification
        - start_at
        - end_at
      type: object
      description: A detailed description of leave request.
      properties:
        start_at:
          type: string
          description: The time at which the the leave request starts.
          format: date-time
        end_at:
          type: string
          description: The time at which the the leave request ends.
          format: date-time
        justification:
          type: string
          description: The leave request justification.
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        paid:
          type: boolean
          description: If the leave request is paid.
        leave_type_id:
          type: string
          description: The leave request's leave type id.
        site_id:
          type: string
          description: The leave request's site id.
        position_id:
          type: string
          description: The leave request's position id.
        member_site_position_id:
          type: string
          description: The requester's site position id.
          format: uuid
        resource_id:
          type: string
          description: The leave request's resource id.
        member_id:
          type: string
          description: The requester's id.
          format: uuid
    LeaveRequestUpdate:
      type: object
      description: A detailed description of leave request.
      properties:
        start_at:
          type: string
          description: The time at which the the leave request starts.
          format: date-time
        end_at:
          type: string
          description: The time at which the the leave request ends.
          format: date-time
        justification:
          type: string
          description: The leave request justification.
        leave_value:
          type: integer
          description: The length of the time off.
          format: int32
        paid:
          type: boolean
          description: If the leave request is paid.
        leave_type_id:
          type: string
          description: The leave request's leave type id.
        site_id:
          type: string
          description: The leave request's site id.
        position_id:
          type: string
          description: The leave request's position id.
        member_site_position_id:
          type: string
          description: The requester's site position id.
          format: uuid
        resource_id:
          type: string
          description: The leave request's resource id.
        time_off_payment_constraint_attributes:
          "$ref": "#/components/schemas/TimeOffPaymentConstraintUpdateAttributes"
    LeaveTypeCreate:
      required:
        - name
        - paid
      type: object
      description: A detailed description of leave type.
      properties:
        name:
          type: string
          description: The leave type's name.
        paid:
          type: boolean
          description: If the leave type is paid.
        keep_track_hours:
          type: boolean
          description:
            If time clock is enabled for your organization, whether or
            not time offs with this leave type should impact the associated time bank.
    LeaveTypeUpdate:
      type: object
      description: A detailed description of leave type.
      properties:
        name:
          type: string
          description: The leave type's name.
        paid:
          type: boolean
          description: If the leave type is paid.
        keep_track_hours:
          type: boolean
          description:
            If time clock is enabled for your organization, whether or
            not time offs with this leave type should impact the associated time bank.
    SchedulerProjectionBulkCreate:
      required:
        - scheduler_projections
      type: object
      description: A detailed description of scheduler projection.
      properties:
        scheduler_projections:
          type: array
          description: The scheduler projections.
          items:
            "$ref": "#/components/schemas/SchedulerProjectionCreate"
    SchedulerProjectionBulkUpdate:
      required:
        - scheduler_projections
      type: object
      description: A detailed description of scheduler projection.
      properties:
        scheduler_projections:
          type: array
          description: The scheduler projections.
          items:
            "$ref": "#/components/schemas/SchedulerProjectionUpdateForBulk"
  responses:
    EmptySuccess:
      description: Success
      content:
        application/json:
          schema:
            type: object
    NotFoundFailure:
      description: Not found error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
    InputParamsFailure:
      description: Input params error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
    QueryParamFailure:
      description: Query param error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
    PathParamFailure:
      description: Path param error
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Errors"
    ActivitySuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Activity"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    AvailabilitySuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Availability"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    AvailabilityListRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/AvailabilityListRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    AvailabilityListRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/AvailabilityListRequest"
    AvailabilityListSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/AvailabilityList"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    AvailabilityListSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/AvailabilityList"
    BillboardTagSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/BillboardTag"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    BillboardTagSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/BillboardTag"
    BillboardThreadSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/BillboardThread"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    BillboardThreadSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/BillboardThread"
    BreakSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Break"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ClockLogSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/ClockLog"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ClockLogSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/ClockLog"
    CommentSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Comment"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    CommentSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Comment"
    LeaveRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaveRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    LeaveRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/LeaveRequest"
    LeaveTypeSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaveType"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    LeaveTypeSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/LeaveType"
    MemberTimeBankTransactionSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberTimeBankTransaction"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    MemberTimeBankTransactionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/MemberTimeBankTransaction"
    MemberTimeBankSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberTimeBank"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    MemberSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Member"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    MemberSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Member"
    MemberSiteSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberSite"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PayrollSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Payroll"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PayrollSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Payroll"
    PositionSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Position"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PositionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Position"
    PremiumEntrySuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/PremiumEntry"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PublicationSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Publication"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    PublicationSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Publication"
    ResourceSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Resource"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ResourceSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Resource"
    SchedulerProjectionBulkSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/SchedulerProjection"
    SchedulerProjectionSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/SchedulerProjection"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    SchedulerProjectionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/SchedulerProjection"
    SessionSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Session"
    ShiftSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Shift"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    ShiftSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Shift"
    SiteSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/Site"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    SiteSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/Site"
    TimeBankSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/TimeBank"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    TimeBankSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/TimeBank"
    TimeEntrySuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/TimeEntry"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    TimeEntrySuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/TimeEntry"
    TransferRequestSuccessMany:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/components/schemas/TransferRequest"
              pagination:
                "$ref": "#/components/schemas/CommonPagination"
    TransferRequestSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/TransferRequest"
    UserSuccessOne:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                "$ref": "#/components/schemas/User"
  parameters:
    PathId:
      name: id
      in: path
      description: Unique identifier for the object.
      required: true
      schema:
        type: string
    Date:
      name: date
      in: path
      description: The object active at this date (DD-MM-YYYY).
      required: true
      schema:
        type: string
    QueryPage:
      name: page
      in: query
      description: The page to return.
      schema:
        minimum: 1
        type: integer
        default: 1
    QueryLimit:
      name: limit
      in: query
      description:
        The limit on the returned page - it cannot exceed the page size
        - OR the search.
      schema:
        maximum: 100
        minimum: 0
        type: integer
        default: 50
    QueryPageSize:
      name: page_size
      in: query
      description: The number of records per page
      schema:
        maximum: 100
        minimum: 50
        type: integer
        default: 50
  requestBodies:
    BillboardTagCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardTagCreate"
    BillboardTagUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardTagUpdate"
    BillboardThreadCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardThreadCreate"
    BillboardThreadUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/BillboardThreadUpdate"
    CommentCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/CommentCreate"
    CommentUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/CommentUpdate"
    LeaveRequestCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveRequestCreate"
    LeaveRequestUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveRequestUpdate"
    LeaveTypeCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveTypeCreate"
    LeaveTypeUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/LeaveTypeUpdate"
    MemberCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/MemberCreate"
    MemberUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/MemberUpdate"
    PayrollUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/PayrollUpdate"
    PositionCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/PositionCreate"
    PositionUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/PositionUpdate"
    ResourceCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ResourceCreate"
    ResourceUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ResourceUpdate"
    SchedulerProjectionCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionCreate"
    SchedulerProjectionUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionUpdate"
    SchedulerProjectionBulkCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionBulkCreate"
    SchedulerProjectionUpdateForBulk:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionUpdateForBulk"
    SchedulerProjectionBulkUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SchedulerProjectionBulkUpdate"
    ShiftCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ShiftCreate"
    ShiftUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ShiftUpdate"
    SiteCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SiteCreate"
    SiteUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/SiteUpdate"
    TimeEntryCreate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/TimeEntryCreate"
    TimeEntryUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/TimeEntryUpdate"
    UserUpdate:
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/UserUpdate"
  securitySchemes:
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          tokenUrl: https://app.agendrix.com/oauth/token
          authorizationUrl: https://app.agendrix.com/oauth/authorize
          scopes:
            read: Read authorization
            write: Write authorization
